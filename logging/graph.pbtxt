node {
  name: "ks"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\275ky?N\376\036>\324\257\357>"
      }
    }
  }
}
node {
  name: "transform/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "transform/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "transform/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "transform/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4
    }
  }
}
node {
  name: "transform/truncated_normal/mul"
  op: "Mul"
  input: "transform/truncated_normal/TruncatedNormal"
  input: "transform/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/truncated_normal"
  op: "Add"
  input: "transform/truncated_normal/mul"
  input: "transform/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/W2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/W2"
    }
  }
}
node {
  name: "transform/W2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/W2/Assign"
  op: "AssignVariableOp"
  input: "transform/W2"
  input: "transform/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "transform/truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "transform/truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "transform/truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 14
    }
  }
}
node {
  name: "transform/truncated_normal_1/mul"
  op: "Mul"
  input: "transform/truncated_normal_1/TruncatedNormal"
  input: "transform/truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/truncated_normal_1"
  op: "Add"
  input: "transform/truncated_normal_1/mul"
  input: "transform/truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b1"
    }
  }
}
node {
  name: "transform/b1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b1/Assign"
  op: "AssignVariableOp"
  input: "transform/b1"
  input: "transform/truncated_normal_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/truncated_normal_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "transform/truncated_normal_2/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/truncated_normal_2/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "transform/truncated_normal_2/TruncatedNormal"
  op: "TruncatedNormal"
  input: "transform/truncated_normal_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 24
    }
  }
}
node {
  name: "transform/truncated_normal_2/mul"
  op: "Mul"
  input: "transform/truncated_normal_2/TruncatedNormal"
  input: "transform/truncated_normal_2/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/truncated_normal_2"
  op: "Add"
  input: "transform/truncated_normal_2/mul"
  input: "transform/truncated_normal_2/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b2"
    }
  }
}
node {
  name: "transform/b2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b2/Assign"
  op: "AssignVariableOp"
  input: "transform/b2"
  input: "transform/truncated_normal_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/truncated_normal_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "transform/truncated_normal_3/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/truncated_normal_3/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "transform/truncated_normal_3/TruncatedNormal"
  op: "TruncatedNormal"
  input: "transform/truncated_normal_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 34
    }
  }
}
node {
  name: "transform/truncated_normal_3/mul"
  op: "Mul"
  input: "transform/truncated_normal_3/TruncatedNormal"
  input: "transform/truncated_normal_3/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/truncated_normal_3"
  op: "Add"
  input: "transform/truncated_normal_3/mul"
  input: "transform/truncated_normal_3/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/W2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/W2_1"
    }
  }
}
node {
  name: "transform/W2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/W2_1/Assign"
  op: "AssignVariableOp"
  input: "transform/W2_1"
  input: "transform/truncated_normal_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/truncated_normal_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "transform/truncated_normal_4/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/truncated_normal_4/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "transform/truncated_normal_4/TruncatedNormal"
  op: "TruncatedNormal"
  input: "transform/truncated_normal_4/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 44
    }
  }
}
node {
  name: "transform/truncated_normal_4/mul"
  op: "Mul"
  input: "transform/truncated_normal_4/TruncatedNormal"
  input: "transform/truncated_normal_4/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/truncated_normal_4"
  op: "Add"
  input: "transform/truncated_normal_4/mul"
  input: "transform/truncated_normal_4/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b1_1"
    }
  }
}
node {
  name: "transform/b1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b1_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b1_1/Assign"
  op: "AssignVariableOp"
  input: "transform/b1_1"
  input: "transform/truncated_normal_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/truncated_normal_5/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "transform/truncated_normal_5/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/truncated_normal_5/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "transform/truncated_normal_5/TruncatedNormal"
  op: "TruncatedNormal"
  input: "transform/truncated_normal_5/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 54
    }
  }
}
node {
  name: "transform/truncated_normal_5/mul"
  op: "Mul"
  input: "transform/truncated_normal_5/TruncatedNormal"
  input: "transform/truncated_normal_5/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/truncated_normal_5"
  op: "Add"
  input: "transform/truncated_normal_5/mul"
  input: "transform/truncated_normal_5/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b2_1"
    }
  }
}
node {
  name: "transform/b2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b2_1/Assign"
  op: "AssignVariableOp"
  input: "transform/b2_1"
  input: "transform/truncated_normal_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/truncated_normal_6/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "transform/truncated_normal_6/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/truncated_normal_6/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "transform/truncated_normal_6/TruncatedNormal"
  op: "TruncatedNormal"
  input: "transform/truncated_normal_6/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 64
    }
  }
}
node {
  name: "transform/truncated_normal_6/mul"
  op: "Mul"
  input: "transform/truncated_normal_6/TruncatedNormal"
  input: "transform/truncated_normal_6/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/truncated_normal_6"
  op: "Add"
  input: "transform/truncated_normal_6/mul"
  input: "transform/truncated_normal_6/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/W2_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/W2_2"
    }
  }
}
node {
  name: "transform/W2_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/W2_2/Assign"
  op: "AssignVariableOp"
  input: "transform/W2_2"
  input: "transform/truncated_normal_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/truncated_normal_7/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "transform/truncated_normal_7/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/truncated_normal_7/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "transform/truncated_normal_7/TruncatedNormal"
  op: "TruncatedNormal"
  input: "transform/truncated_normal_7/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 74
    }
  }
}
node {
  name: "transform/truncated_normal_7/mul"
  op: "Mul"
  input: "transform/truncated_normal_7/TruncatedNormal"
  input: "transform/truncated_normal_7/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/truncated_normal_7"
  op: "Add"
  input: "transform/truncated_normal_7/mul"
  input: "transform/truncated_normal_7/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b1_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b1_2"
    }
  }
}
node {
  name: "transform/b1_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b1_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b1_2/Assign"
  op: "AssignVariableOp"
  input: "transform/b1_2"
  input: "transform/truncated_normal_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/truncated_normal_8/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "transform/truncated_normal_8/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/truncated_normal_8/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "transform/truncated_normal_8/TruncatedNormal"
  op: "TruncatedNormal"
  input: "transform/truncated_normal_8/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 84
    }
  }
}
node {
  name: "transform/truncated_normal_8/mul"
  op: "Mul"
  input: "transform/truncated_normal_8/TruncatedNormal"
  input: "transform/truncated_normal_8/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/truncated_normal_8"
  op: "Add"
  input: "transform/truncated_normal_8/mul"
  input: "transform/truncated_normal_8/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b2_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b2_2"
    }
  }
}
node {
  name: "transform/b2_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b2_2/Assign"
  op: "AssignVariableOp"
  input: "transform/b2_2"
  input: "transform/truncated_normal_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/truncated_normal_9/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "transform/truncated_normal_9/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/truncated_normal_9/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "transform/truncated_normal_9/TruncatedNormal"
  op: "TruncatedNormal"
  input: "transform/truncated_normal_9/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 94
    }
  }
}
node {
  name: "transform/truncated_normal_9/mul"
  op: "Mul"
  input: "transform/truncated_normal_9/TruncatedNormal"
  input: "transform/truncated_normal_9/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/truncated_normal_9"
  op: "Add"
  input: "transform/truncated_normal_9/mul"
  input: "transform/truncated_normal_9/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/W2_3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/W2_3"
    }
  }
}
node {
  name: "transform/W2_3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/W2_3/Assign"
  op: "AssignVariableOp"
  input: "transform/W2_3"
  input: "transform/truncated_normal_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/truncated_normal_10/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "transform/truncated_normal_10/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/truncated_normal_10/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "transform/truncated_normal_10/TruncatedNormal"
  op: "TruncatedNormal"
  input: "transform/truncated_normal_10/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 104
    }
  }
}
node {
  name: "transform/truncated_normal_10/mul"
  op: "Mul"
  input: "transform/truncated_normal_10/TruncatedNormal"
  input: "transform/truncated_normal_10/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/truncated_normal_10"
  op: "Add"
  input: "transform/truncated_normal_10/mul"
  input: "transform/truncated_normal_10/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b1_3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b1_3"
    }
  }
}
node {
  name: "transform/b1_3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b1_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b1_3/Assign"
  op: "AssignVariableOp"
  input: "transform/b1_3"
  input: "transform/truncated_normal_10"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/truncated_normal_11/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "transform/truncated_normal_11/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/truncated_normal_11/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "transform/truncated_normal_11/TruncatedNormal"
  op: "TruncatedNormal"
  input: "transform/truncated_normal_11/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 114
    }
  }
}
node {
  name: "transform/truncated_normal_11/mul"
  op: "Mul"
  input: "transform/truncated_normal_11/TruncatedNormal"
  input: "transform/truncated_normal_11/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/truncated_normal_11"
  op: "Add"
  input: "transform/truncated_normal_11/mul"
  input: "transform/truncated_normal_11/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b2_3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b2_3"
    }
  }
}
node {
  name: "transform/b2_3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b2_3/Assign"
  op: "AssignVariableOp"
  input: "transform/b2_3"
  input: "transform/truncated_normal_11"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/init/make_diag_scale/LinearOperatorIdentity/num_rows"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/shapes_from_loc_and_scale/LinearOperatorIdentity/range_dimension_tensor/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/shapes_from_loc_and_scale/LinearOperatorIdentity_1/batch_shape_tensor/batch_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/shapes_from_loc_and_scale/loc_batch_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ones"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Normal/Identity"
  op: "Identity"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Normal/Identity_1"
  op: "Identity"
  input: "ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Normal/is_scalar_batch/is_scalar_batch"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/batch_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "Normal/is_scalar_event/is_scalar_event"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/event_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "Normal/is_scalar_batch_1/is_scalar_batch"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/Const_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sub"
  op: "Sub"
  input: "MultivariateNormalDiag/sub/x"
  input: "MultivariateNormalDiag/Const_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/range/limit"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/range"
  op: "Range"
  input: "MultivariateNormalDiag/sub"
  input: "MultivariateNormalDiag/range/limit"
  input: "MultivariateNormalDiag/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/sample_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/sample_shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "Normal/batch_shape_tensor/batch_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Normal/sample/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1536
      }
    }
  }
}
node {
  name: "Normal/sample/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Normal/sample/concat"
  op: "ConcatV2"
  input: "Normal/sample/concat/values_0"
  input: "Normal/batch_shape_tensor/batch_shape"
  input: "Normal/sample/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Normal/sample/random_normal/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Normal/sample/random_normal/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Normal/sample/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "Normal/sample/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 171
    }
  }
}
node {
  name: "Normal/sample/random_normal/mul"
  op: "Mul"
  input: "Normal/sample/random_normal/RandomStandardNormal"
  input: "Normal/sample/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
        }
      }
    }
  }
}
node {
  name: "Normal/sample/random_normal"
  op: "Add"
  input: "Normal/sample/random_normal/mul"
  input: "Normal/sample/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
        }
      }
    }
  }
}
node {
  name: "Normal/sample/mul"
  op: "Mul"
  input: "Normal/sample/random_normal"
  input: "Normal/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
        }
      }
    }
  }
}
node {
  name: "Normal/sample/add"
  op: "Add"
  input: "Normal/sample/mul"
  input: "Normal/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
        }
      }
    }
  }
}
node {
  name: "Normal/sample/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1536
      }
    }
  }
}
node {
  name: "Normal/sample/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Normal/sample/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Normal/sample/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Normal/sample/strided_slice"
  op: "StridedSlice"
  input: "Normal/sample/Shape"
  input: "Normal/sample/strided_slice/stack"
  input: "Normal/sample/strided_slice/stack_1"
  input: "Normal/sample/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Normal/sample/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Normal/sample/concat_1"
  op: "ConcatV2"
  input: "MultivariateNormalDiag/sample/Const_1"
  input: "Normal/sample/strided_slice"
  input: "Normal/sample/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Normal/sample/Reshape"
  op: "Reshape"
  input: "Normal/sample/add"
  input: "Normal/sample/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/strided_slice"
  op: "StridedSlice"
  input: "MultivariateNormalDiag/sample/Shape"
  input: "MultivariateNormalDiag/sample/strided_slice/stack"
  input: "MultivariateNormalDiag/sample/strided_slice/stack_1"
  input: "MultivariateNormalDiag/sample/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/concat"
  op: "ConcatV2"
  input: "MultivariateNormalDiag/sample/sample_shape_1"
  input: "MultivariateNormalDiag/sample/strided_slice"
  input: "MultivariateNormalDiag/sample/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/Reshape"
  op: "Reshape"
  input: "Normal/sample/Reshape"
  input: "MultivariateNormalDiag/sample/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/affine_linear_operator/forward/LinearOperatorIdentity/matvec/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/affine_linear_operator/forward/LinearOperatorIdentity/matvec/ExpandDims"
  op: "ExpandDims"
  input: "MultivariateNormalDiag/sample/Reshape"
  input: "MultivariateNormalDiag/sample/affine_linear_operator/forward/LinearOperatorIdentity/matvec/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/affine_linear_operator/forward/LinearOperatorIdentity/matvec/Squeeze"
  op: "Squeeze"
  input: "MultivariateNormalDiag/sample/affine_linear_operator/forward/LinearOperatorIdentity/matvec/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "MultivariateNormalDiag/sample/affine_linear_operator/forward/add"
  op: "Add"
  input: "MultivariateNormalDiag/sample/affine_linear_operator/forward/LinearOperatorIdentity/matvec/Squeeze"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "MultivariateNormalDiag/sample/affine_linear_operator/forward/add"
  input: "ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift/scale"
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/scale"
  input: "chain/squeeze_and_shift/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/scale"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/strided_slice"
  op: "StridedSlice"
  input: "ExpandDims"
  input: "chain/squeeze_and_shift/strided_slice/stack"
  input: "chain/squeeze_and_shift/strided_slice/stack_1"
  input: "chain/squeeze_and_shift/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/squeeze_and_shift/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/strided_slice_1"
  op: "StridedSlice"
  input: "ExpandDims"
  input: "chain/squeeze_and_shift/strided_slice_1/stack"
  input: "chain/squeeze_and_shift/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/squeeze_and_shift/Exp/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/Exp"
  op: "Exp"
  input: "chain/squeeze_and_shift/Exp/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/mul"
  op: "Mul"
  input: "chain/squeeze_and_shift/strided_slice"
  input: "chain/squeeze_and_shift/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/Neg"
  op: "Neg"
  input: "chain/squeeze_and_shift/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/Exp_1"
  op: "Exp"
  input: "chain/squeeze_and_shift/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/zeros"
  op: "Fill"
  input: "chain/squeeze_and_shift/irrotational_mlp/zeros/shape_as_tensor"
  input: "chain/squeeze_and_shift/irrotational_mlp/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift/irrotational_mlp/W1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1"
  input: "chain/squeeze_and_shift/irrotational_mlp/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/b3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift/irrotational_mlp/b3"
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3"
  input: "chain/squeeze_and_shift/irrotational_mlp/zeros_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/b3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\003\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/Reshape"
  op: "Reshape"
  input: "chain/squeeze_and_shift/strided_slice"
  input: "chain/squeeze_and_shift/irrotational_mlp/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/MatMul"
  op: "MatMul"
  input: "chain/squeeze_and_shift/irrotational_mlp/Reshape"
  input: "chain/squeeze_and_shift/irrotational_mlp/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/add/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/add"
  op: "Add"
  input: "chain/squeeze_and_shift/irrotational_mlp/MatMul"
  input: "chain/squeeze_and_shift/irrotational_mlp/add/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/Softplus"
  op: "Softplus"
  input: "chain/squeeze_and_shift/irrotational_mlp/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/Mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/Mul"
  op: "Mul"
  input: "chain/squeeze_and_shift/irrotational_mlp/Mul/ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/add_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/add_1"
  op: "Add"
  input: "chain/squeeze_and_shift/irrotational_mlp/Mul"
  input: "chain/squeeze_and_shift/irrotational_mlp/add_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/Softplus_1"
  op: "Softplus"
  input: "chain/squeeze_and_shift/irrotational_mlp/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/MatMul_1"
  op: "MatMul"
  input: "chain/squeeze_and_shift/irrotational_mlp/Softplus_1"
  input: "chain/squeeze_and_shift/irrotational_mlp/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/add_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/add_2"
  op: "Add"
  input: "chain/squeeze_and_shift/irrotational_mlp/MatMul_1"
  input: "chain/squeeze_and_shift/irrotational_mlp/add_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/ExpandDims"
  op: "ExpandDims"
  input: "chain/squeeze_and_shift/irrotational_mlp/add_2"
  input: "chain/squeeze_and_shift/irrotational_mlp/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/add"
  op: "Add"
  input: "chain/squeeze_and_shift/strided_slice_1"
  input: "chain/squeeze_and_shift/irrotational_mlp/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift/Exp_1"
  input: "chain/squeeze_and_shift/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/concat"
  op: "ConcatV2"
  input: "chain/squeeze_and_shift/mul"
  input: "chain/squeeze_and_shift/mul_1"
  input: "chain/squeeze_and_shift/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/Reshape"
  op: "Reshape"
  input: "chain/squeeze_and_shift/concat"
  input: "chain/squeeze_and_shift/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/ones"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s1"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s1"
  input: "chain/linear_symplectic_two_by_two/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two/s1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s2"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s2/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s2"
  input: "chain/linear_symplectic_two_by_two/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s2/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two/s2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s3"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s3/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s3"
  input: "chain/linear_symplectic_two_by_two/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s3/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two/s3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/mul"
  op: "Mul"
  input: "chain/linear_symplectic_two_by_two/s2/read"
  input: "chain/linear_symplectic_two_by_two/s3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/add"
  op: "Add"
  input: "chain/linear_symplectic_two_by_two/add/x"
  input: "chain/linear_symplectic_two_by_two/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/truediv"
  op: "RealDiv"
  input: "chain/linear_symplectic_two_by_two/add"
  input: "chain/linear_symplectic_two_by_two/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two/s1/read"
  input: "chain/linear_symplectic_two_by_two/s2/read"
  input: "chain/linear_symplectic_two_by_two/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat_1"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two/s3/read"
  input: "chain/linear_symplectic_two_by_two/truediv"
  input: "chain/linear_symplectic_two_by_two/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat_2"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two/concat"
  input: "chain/linear_symplectic_two_by_two/concat_1"
  input: "chain/linear_symplectic_two_by_two/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/Neg"
  op: "Neg"
  input: "chain/linear_symplectic_two_by_two/s2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat_3"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two/truediv"
  input: "chain/linear_symplectic_two_by_two/Neg"
  input: "chain/linear_symplectic_two_by_two/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/Neg_1"
  op: "Neg"
  input: "chain/linear_symplectic_two_by_two/s3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat_4"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two/Neg_1"
  input: "chain/linear_symplectic_two_by_two/s1/read"
  input: "chain/linear_symplectic_two_by_two/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat_5"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two/concat_3"
  input: "chain/linear_symplectic_two_by_two/concat_4"
  input: "chain/linear_symplectic_two_by_two/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/strided_slice"
  op: "StridedSlice"
  input: "chain/squeeze_and_shift/Reshape"
  input: "chain/linear_symplectic_two_by_two/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/strided_slice_1"
  op: "StridedSlice"
  input: "chain/squeeze_and_shift/Reshape"
  input: "chain/linear_symplectic_two_by_two/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat_6/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/concat_6"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two/strided_slice"
  input: "chain/linear_symplectic_two_by_two/strided_slice_1"
  input: "chain/linear_symplectic_two_by_two/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/einsum/transpose"
  op: "Transpose"
  input: "chain/linear_symplectic_two_by_two/concat_2"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/einsum/transpose_1"
  op: "Transpose"
  input: "chain/linear_symplectic_two_by_two/concat_6"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/einsum/MatMul"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/einsum/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/einsum/transpose_2"
  op: "Transpose"
  input: "chain/linear_symplectic_two_by_two/einsum/MatMul"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/Reshape"
  op: "Reshape"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose_2"
  input: "chain/linear_symplectic_two_by_two/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_1/scale"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/scale"
  input: "chain/squeeze_and_shift_1/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/scale"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/strided_slice"
  op: "StridedSlice"
  input: "chain/linear_symplectic_two_by_two/Reshape"
  input: "chain/squeeze_and_shift_1/strided_slice/stack"
  input: "chain/squeeze_and_shift_1/strided_slice/stack_1"
  input: "chain/squeeze_and_shift_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/strided_slice_1"
  op: "StridedSlice"
  input: "chain/linear_symplectic_two_by_two/Reshape"
  input: "chain/squeeze_and_shift_1/strided_slice_1/stack"
  input: "chain/squeeze_and_shift_1/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/Exp/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/Exp"
  op: "Exp"
  input: "chain/squeeze_and_shift_1/Exp/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/mul"
  op: "Mul"
  input: "chain/squeeze_and_shift_1/strided_slice"
  input: "chain/squeeze_and_shift_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/Neg"
  op: "Neg"
  input: "chain/squeeze_and_shift_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/Exp_1"
  op: "Exp"
  input: "chain/squeeze_and_shift_1/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/zeros"
  op: "Fill"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/zeros/shape_as_tensor"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/zeros_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\003\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape"
  op: "Reshape"
  input: "chain/squeeze_and_shift_1/strided_slice"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul"
  op: "MatMul"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/add/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/add"
  op: "Add"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus"
  op: "Softplus"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/Mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/Mul"
  op: "Mul"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Mul/ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/add_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/add_1"
  op: "Add"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Mul"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1"
  op: "Softplus"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1"
  op: "MatMul"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/add_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/add_2"
  op: "Add"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims"
  op: "ExpandDims"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add_2"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/add"
  op: "Add"
  input: "chain/squeeze_and_shift_1/strided_slice_1"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_1/Exp_1"
  input: "chain/squeeze_and_shift_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/concat"
  op: "ConcatV2"
  input: "chain/squeeze_and_shift_1/mul"
  input: "chain/squeeze_and_shift_1/mul_1"
  input: "chain/squeeze_and_shift_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/Reshape"
  op: "Reshape"
  input: "chain/squeeze_and_shift_1/concat"
  input: "chain/squeeze_and_shift_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/ones"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s1"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s1"
  input: "chain/linear_symplectic_two_by_two_1/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_1/s1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s2"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s2/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s2"
  input: "chain/linear_symplectic_two_by_two_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s2/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_1/s2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s3"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s3/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s3"
  input: "chain/linear_symplectic_two_by_two_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s3/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_1/s3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/mul"
  op: "Mul"
  input: "chain/linear_symplectic_two_by_two_1/s2/read"
  input: "chain/linear_symplectic_two_by_two_1/s3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/add"
  op: "Add"
  input: "chain/linear_symplectic_two_by_two_1/add/x"
  input: "chain/linear_symplectic_two_by_two_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/truediv"
  op: "RealDiv"
  input: "chain/linear_symplectic_two_by_two_1/add"
  input: "chain/linear_symplectic_two_by_two_1/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_1/s1/read"
  input: "chain/linear_symplectic_two_by_two_1/s2/read"
  input: "chain/linear_symplectic_two_by_two_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat_1"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_1/s3/read"
  input: "chain/linear_symplectic_two_by_two_1/truediv"
  input: "chain/linear_symplectic_two_by_two_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat_2"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_1/concat"
  input: "chain/linear_symplectic_two_by_two_1/concat_1"
  input: "chain/linear_symplectic_two_by_two_1/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/Neg"
  op: "Neg"
  input: "chain/linear_symplectic_two_by_two_1/s2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat_3"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_1/truediv"
  input: "chain/linear_symplectic_two_by_two_1/Neg"
  input: "chain/linear_symplectic_two_by_two_1/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/Neg_1"
  op: "Neg"
  input: "chain/linear_symplectic_two_by_two_1/s3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat_4"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_1/Neg_1"
  input: "chain/linear_symplectic_two_by_two_1/s1/read"
  input: "chain/linear_symplectic_two_by_two_1/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat_5"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_1/concat_3"
  input: "chain/linear_symplectic_two_by_two_1/concat_4"
  input: "chain/linear_symplectic_two_by_two_1/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/strided_slice"
  op: "StridedSlice"
  input: "chain/squeeze_and_shift_1/Reshape"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/strided_slice_1"
  op: "StridedSlice"
  input: "chain/squeeze_and_shift_1/Reshape"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat_6/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/concat_6"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice_1"
  input: "chain/linear_symplectic_two_by_two_1/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/einsum/transpose"
  op: "Transpose"
  input: "chain/linear_symplectic_two_by_two_1/concat_2"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/einsum/transpose_1"
  op: "Transpose"
  input: "chain/linear_symplectic_two_by_two_1/concat_6"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/einsum/MatMul"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/einsum/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/einsum/transpose_2"
  op: "Transpose"
  input: "chain/linear_symplectic_two_by_two_1/einsum/MatMul"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/Reshape"
  op: "Reshape"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose_2"
  input: "chain/linear_symplectic_two_by_two_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_2/scale"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/scale"
  input: "chain/squeeze_and_shift_2/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/scale"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/strided_slice"
  op: "StridedSlice"
  input: "chain/linear_symplectic_two_by_two_1/Reshape"
  input: "chain/squeeze_and_shift_2/strided_slice/stack"
  input: "chain/squeeze_and_shift_2/strided_slice/stack_1"
  input: "chain/squeeze_and_shift_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/strided_slice_1"
  op: "StridedSlice"
  input: "chain/linear_symplectic_two_by_two_1/Reshape"
  input: "chain/squeeze_and_shift_2/strided_slice_1/stack"
  input: "chain/squeeze_and_shift_2/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/Exp/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/Exp"
  op: "Exp"
  input: "chain/squeeze_and_shift_2/Exp/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/mul"
  op: "Mul"
  input: "chain/squeeze_and_shift_2/strided_slice"
  input: "chain/squeeze_and_shift_2/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/Neg"
  op: "Neg"
  input: "chain/squeeze_and_shift_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/Exp_1"
  op: "Exp"
  input: "chain/squeeze_and_shift_2/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/zeros"
  op: "Fill"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/zeros/shape_as_tensor"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/zeros_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\003\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape"
  op: "Reshape"
  input: "chain/squeeze_and_shift_2/strided_slice"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul"
  op: "MatMul"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/add/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/add"
  op: "Add"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus"
  op: "Softplus"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/Mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/Mul"
  op: "Mul"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Mul/ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/add_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/add_1"
  op: "Add"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Mul"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1"
  op: "Softplus"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1"
  op: "MatMul"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/add_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/add_2"
  op: "Add"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims"
  op: "ExpandDims"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add_2"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/add"
  op: "Add"
  input: "chain/squeeze_and_shift_2/strided_slice_1"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_2/Exp_1"
  input: "chain/squeeze_and_shift_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/concat"
  op: "ConcatV2"
  input: "chain/squeeze_and_shift_2/mul"
  input: "chain/squeeze_and_shift_2/mul_1"
  input: "chain/squeeze_and_shift_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/Reshape"
  op: "Reshape"
  input: "chain/squeeze_and_shift_2/concat"
  input: "chain/squeeze_and_shift_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/ones"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s1"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s1"
  input: "chain/linear_symplectic_two_by_two_2/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_2/s1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s2"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s2/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s2"
  input: "chain/linear_symplectic_two_by_two_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s2/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_2/s2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s3"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s3/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s3"
  input: "chain/linear_symplectic_two_by_two_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s3/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_2/s3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/mul"
  op: "Mul"
  input: "chain/linear_symplectic_two_by_two_2/s2/read"
  input: "chain/linear_symplectic_two_by_two_2/s3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/add"
  op: "Add"
  input: "chain/linear_symplectic_two_by_two_2/add/x"
  input: "chain/linear_symplectic_two_by_two_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/truediv"
  op: "RealDiv"
  input: "chain/linear_symplectic_two_by_two_2/add"
  input: "chain/linear_symplectic_two_by_two_2/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_2/s1/read"
  input: "chain/linear_symplectic_two_by_two_2/s2/read"
  input: "chain/linear_symplectic_two_by_two_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat_1"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_2/s3/read"
  input: "chain/linear_symplectic_two_by_two_2/truediv"
  input: "chain/linear_symplectic_two_by_two_2/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat_2"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_2/concat"
  input: "chain/linear_symplectic_two_by_two_2/concat_1"
  input: "chain/linear_symplectic_two_by_two_2/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/Neg"
  op: "Neg"
  input: "chain/linear_symplectic_two_by_two_2/s2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat_3"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_2/truediv"
  input: "chain/linear_symplectic_two_by_two_2/Neg"
  input: "chain/linear_symplectic_two_by_two_2/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/Neg_1"
  op: "Neg"
  input: "chain/linear_symplectic_two_by_two_2/s3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat_4"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_2/Neg_1"
  input: "chain/linear_symplectic_two_by_two_2/s1/read"
  input: "chain/linear_symplectic_two_by_two_2/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat_5"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_2/concat_3"
  input: "chain/linear_symplectic_two_by_two_2/concat_4"
  input: "chain/linear_symplectic_two_by_two_2/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/strided_slice"
  op: "StridedSlice"
  input: "chain/squeeze_and_shift_2/Reshape"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/strided_slice_1"
  op: "StridedSlice"
  input: "chain/squeeze_and_shift_2/Reshape"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat_6/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/concat_6"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice_1"
  input: "chain/linear_symplectic_two_by_two_2/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/einsum/transpose"
  op: "Transpose"
  input: "chain/linear_symplectic_two_by_two_2/concat_2"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/einsum/transpose_1"
  op: "Transpose"
  input: "chain/linear_symplectic_two_by_two_2/concat_6"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/einsum/MatMul"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/einsum/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/einsum/transpose_2"
  op: "Transpose"
  input: "chain/linear_symplectic_two_by_two_2/einsum/MatMul"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/Reshape"
  op: "Reshape"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose_2"
  input: "chain/linear_symplectic_two_by_two_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_3/scale"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/scale"
  input: "chain/squeeze_and_shift_3/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/scale"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/strided_slice"
  op: "StridedSlice"
  input: "chain/linear_symplectic_two_by_two_2/Reshape"
  input: "chain/squeeze_and_shift_3/strided_slice/stack"
  input: "chain/squeeze_and_shift_3/strided_slice/stack_1"
  input: "chain/squeeze_and_shift_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/strided_slice_1"
  op: "StridedSlice"
  input: "chain/linear_symplectic_two_by_two_2/Reshape"
  input: "chain/squeeze_and_shift_3/strided_slice_1/stack"
  input: "chain/squeeze_and_shift_3/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/Exp/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/Exp"
  op: "Exp"
  input: "chain/squeeze_and_shift_3/Exp/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/mul"
  op: "Mul"
  input: "chain/squeeze_and_shift_3/strided_slice"
  input: "chain/squeeze_and_shift_3/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/Neg"
  op: "Neg"
  input: "chain/squeeze_and_shift_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/Exp_1"
  op: "Exp"
  input: "chain/squeeze_and_shift_3/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/zeros"
  op: "Fill"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/zeros/shape_as_tensor"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/zeros_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\003\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape"
  op: "Reshape"
  input: "chain/squeeze_and_shift_3/strided_slice"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul"
  op: "MatMul"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/add/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/add"
  op: "Add"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus"
  op: "Softplus"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/Mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/Mul"
  op: "Mul"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Mul/ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/add_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/add_1"
  op: "Add"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Mul"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1"
  op: "Softplus"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1"
  op: "MatMul"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/add_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/add_2"
  op: "Add"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims"
  op: "ExpandDims"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add_2"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/add"
  op: "Add"
  input: "chain/squeeze_and_shift_3/strided_slice_1"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_3/Exp_1"
  input: "chain/squeeze_and_shift_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/concat"
  op: "ConcatV2"
  input: "chain/squeeze_and_shift_3/mul"
  input: "chain/squeeze_and_shift_3/mul_1"
  input: "chain/squeeze_and_shift_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/Reshape"
  op: "Reshape"
  input: "chain/squeeze_and_shift_3/concat"
  input: "chain/squeeze_and_shift_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/ones"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s1"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s1"
  input: "chain/linear_symplectic_two_by_two_3/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_3/s1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s2"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s2/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s2"
  input: "chain/linear_symplectic_two_by_two_3/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s2/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_3/s2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s3"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s3/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s3"
  input: "chain/linear_symplectic_two_by_two_3/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s3/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_3/s3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/mul"
  op: "Mul"
  input: "chain/linear_symplectic_two_by_two_3/s2/read"
  input: "chain/linear_symplectic_two_by_two_3/s3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/add"
  op: "Add"
  input: "chain/linear_symplectic_two_by_two_3/add/x"
  input: "chain/linear_symplectic_two_by_two_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/truediv"
  op: "RealDiv"
  input: "chain/linear_symplectic_two_by_two_3/add"
  input: "chain/linear_symplectic_two_by_two_3/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_3/s1/read"
  input: "chain/linear_symplectic_two_by_two_3/s2/read"
  input: "chain/linear_symplectic_two_by_two_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat_1"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_3/s3/read"
  input: "chain/linear_symplectic_two_by_two_3/truediv"
  input: "chain/linear_symplectic_two_by_two_3/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat_2"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_3/concat"
  input: "chain/linear_symplectic_two_by_two_3/concat_1"
  input: "chain/linear_symplectic_two_by_two_3/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/Neg"
  op: "Neg"
  input: "chain/linear_symplectic_two_by_two_3/s2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat_3"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_3/truediv"
  input: "chain/linear_symplectic_two_by_two_3/Neg"
  input: "chain/linear_symplectic_two_by_two_3/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/Neg_1"
  op: "Neg"
  input: "chain/linear_symplectic_two_by_two_3/s3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat_4"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_3/Neg_1"
  input: "chain/linear_symplectic_two_by_two_3/s1/read"
  input: "chain/linear_symplectic_two_by_two_3/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat_5"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_3/concat_3"
  input: "chain/linear_symplectic_two_by_two_3/concat_4"
  input: "chain/linear_symplectic_two_by_two_3/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/strided_slice"
  op: "StridedSlice"
  input: "chain/squeeze_and_shift_3/Reshape"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/strided_slice_1"
  op: "StridedSlice"
  input: "chain/squeeze_and_shift_3/Reshape"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat_6/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/concat_6"
  op: "ConcatV2"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice_1"
  input: "chain/linear_symplectic_two_by_two_3/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/einsum/transpose"
  op: "Transpose"
  input: "chain/linear_symplectic_two_by_two_3/concat_2"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/einsum/transpose_1"
  op: "Transpose"
  input: "chain/linear_symplectic_two_by_two_3/concat_6"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/einsum/MatMul"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/einsum/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/einsum/transpose_2"
  op: "Transpose"
  input: "chain/linear_symplectic_two_by_two_3/einsum/MatMul"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/Reshape"
  op: "Reshape"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose_2"
  input: "chain/linear_symplectic_two_by_two_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "ks"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "chain/linear_symplectic_two_by_two_3/Reshape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "chain/linear_symplectic_two_by_two_3/Reshape"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "einsum/transpose"
  op: "Transpose"
  input: "strided_slice"
  input: "einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "einsum/transpose_1"
  op: "Transpose"
  input: "strided_slice_1"
  input: "einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "einsum/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "einsum/ExpandDims"
  op: "ExpandDims"
  input: "einsum/transpose"
  input: "einsum/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "einsum/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "einsum/ExpandDims_1"
  op: "ExpandDims"
  input: "einsum/transpose_1"
  input: "einsum/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "einsum/Mul"
  op: "Mul"
  input: "einsum/ExpandDims"
  input: "einsum/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "einsum/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "einsum/transpose_2"
  op: "Transpose"
  input: "einsum/Mul"
  input: "einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "einsum/transpose_2"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "einsum/transpose_2"
  input: "transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Square"
  op: "Square"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "Square"
  input: "Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims_1"
  op: "ExpandDims"
  input: "Sum"
  input: "ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.0
      }
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "ExpandDims_1"
  input: "truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Square_1"
  op: "Square"
  input: "strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "Reshape"
  input: "Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "mul"
  input: "Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "Sum_1"
  input: "truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "truediv"
  input: "truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_grad/Shape"
  input: "gradients/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/Fill"
  input: "truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_grad/RealDiv"
  input: "gradients/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_grad/Sum"
  input: "gradients/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Neg"
  op: "Neg"
  input: "ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_grad/Neg"
  input: "truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_grad/RealDiv_1"
  input: "truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "gradients/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_grad/mul"
  input: "gradients/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_grad/Sum_1"
  input: "gradients/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_1_grad/Shape"
  input: "gradients/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/Fill"
  input: "truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_1_grad/RealDiv"
  input: "gradients/truediv_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_1_grad/Sum"
  input: "gradients/truediv_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Neg"
  op: "Neg"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_1_grad/Neg"
  input: "truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_1_grad/RealDiv_1"
  input: "truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "gradients/truediv_1_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_1_grad/mul"
  input: "gradients/truediv_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_1_grad/Sum_1"
  input: "gradients/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_grad/Reshape"
  input: "gradients/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/add"
  op: "Add"
  input: "Sum_1/reduction_indices"
  input: "gradients/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients/Sum_1_grad/add"
  input: "gradients/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/range"
  op: "Range"
  input: "gradients/Sum_1_grad/range/start"
  input: "gradients/Sum_1_grad/Size"
  input: "gradients/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients/Sum_1_grad/Shape_1"
  input: "gradients/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/Sum_1_grad/range"
  input: "gradients/Sum_1_grad/mod"
  input: "gradients/Sum_1_grad/Shape"
  input: "gradients/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients/Sum_1_grad/DynamicStitch"
  input: "gradients/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Sum_1_grad/Shape"
  input: "gradients/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_1_grad/Reshape"
  input: "gradients/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_1_grad/Reshape"
  input: "gradients/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/add"
  op: "Add"
  input: "Sum/reduction_indices"
  input: "gradients/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/Sum_grad/add"
  input: "gradients/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/range"
  op: "Range"
  input: "gradients/Sum_grad/range/start"
  input: "gradients/Sum_grad/Size"
  input: "gradients/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/Sum_grad/Shape_1"
  input: "gradients/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/Sum_grad/range"
  input: "gradients/Sum_grad/mod"
  input: "gradients/Sum_grad/Shape"
  input: "gradients/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/Sum_grad/DynamicStitch"
  input: "gradients/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Sum_grad/Shape"
  input: "gradients/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/ExpandDims_1_grad/Reshape"
  input: "gradients/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_grad/Reshape"
  input: "gradients/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_grad/Shape"
  input: "gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_1_grad/Tile"
  input: "Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Sum"
  op: "Sum"
  input: "gradients/mul_grad/Mul"
  input: "gradients/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_grad/Sum"
  input: "gradients/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Mul_1"
  op: "Mul"
  input: "Reshape"
  input: "gradients/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_grad/Mul_1"
  input: "gradients/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_grad/Sum_1"
  input: "gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_grad/Const"
  op: "Const"
  input: "^gradients/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_grad/Mul"
  op: "Mul"
  input: "sub"
  input: "gradients/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_grad/Tile"
  input: "gradients/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_1_grad/Const"
  op: "Const"
  input: "^gradients/mul_grad/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_1_grad/Mul"
  op: "Mul"
  input: "strided_slice"
  input: "gradients/Square_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_grad/Reshape_1"
  input: "gradients/Square_1_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_grad/Neg"
  op: "Neg"
  input: "gradients/Square_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/sub_grad/Neg"
  input: "gradients/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/Square_grad/Mul_1"
  input: "gradients/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Square_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/einsum/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/einsum/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AddN"
  input: "gradients/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/einsum/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/einsum/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/einsum/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/einsum/Mul_grad/Shape"
  input: "gradients/einsum/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/einsum/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/einsum/transpose_2_grad/transpose"
  input: "einsum/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/einsum/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/einsum/Mul_grad/Mul"
  input: "gradients/einsum/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/einsum/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/einsum/Mul_grad/Sum"
  input: "gradients/einsum/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/einsum/Mul_grad/Mul_1"
  op: "Mul"
  input: "einsum/ExpandDims"
  input: "gradients/einsum/transpose_2_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/einsum/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/einsum/Mul_grad/Mul_1"
  input: "gradients/einsum/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/einsum/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/einsum/Mul_grad/Sum_1"
  input: "gradients/einsum/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/einsum/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/einsum/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/einsum/Mul_grad/Reshape"
  input: "gradients/einsum/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/einsum/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/einsum/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/einsum/Mul_grad/Reshape_1"
  input: "gradients/einsum/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/einsum/ExpandDims_grad/Reshape"
  input: "gradients/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/einsum/ExpandDims_1_grad/Reshape"
  input: "gradients/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/Square_1_grad/Mul_1"
  input: "gradients/einsum/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Square_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_grad/Shape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  input: "gradients/AddN_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_1_grad/Shape"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  input: "gradients/einsum/transpose_1_grad/transpose"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/strided_slice_grad/StridedSliceGrad"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_2"
  input: "gradients/chain/linear_symplectic_two_by_two_3/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_3/Reshape_grad/Reshape"
  input: "gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/transpose"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1"
  input: "gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_3/concat_6/axis"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/mod"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Shape"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice"
  op: "Slice"
  input: "gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/ConcatOffset"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1"
  op: "Slice"
  input: "gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/ConcatOffset:1"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/linear_symplectic_two_by_two_3/strided_slice_grad/Shape"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice/stack_2"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_3/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/linear_symplectic_two_by_two_3/strided_slice_1_grad/Shape"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack_2"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/chain/linear_symplectic_two_by_two_3/strided_slice_grad/StridedSliceGrad"
  input: "gradients/chain/linear_symplectic_two_by_two_3/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/chain/linear_symplectic_two_by_two_3/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_3"
  input: "gradients/chain/squeeze_and_shift_3/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/concat_grad/mod"
  op: "FloorMod"
  input: "chain/squeeze_and_shift_3/concat/axis"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/mod"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/concat_grad/Slice"
  op: "Slice"
  input: "gradients/chain/squeeze_and_shift_3/Reshape_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/ConcatOffset"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/chain/squeeze_and_shift_3/Reshape_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/ConcatOffset:1"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_3/mul_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_grad/Mul"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/Slice"
  input: "chain/squeeze_and_shift_3/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_3/mul_grad/Mul"
  input: "gradients/chain/squeeze_and_shift_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/mul_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_3/strided_slice"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_3/mul_grad/Mul_1"
  input: "gradients/chain/squeeze_and_shift_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/mul_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1"
  input: "chain/squeeze_and_shift_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul"
  input: "gradients/chain/squeeze_and_shift_3/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_3/Exp_1"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1"
  input: "gradients/chain/squeeze_and_shift_3/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/squeeze_and_shift_3/strided_slice_1_grad/Shape"
  input: "chain/squeeze_and_shift_3/strided_slice_1/stack"
  input: "chain/squeeze_and_shift_3/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift_3/strided_slice_1/stack_2"
  input: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Reshape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/mul_1_grad/Reshape_1"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Mul/ReadVariableOp"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape_1"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/chain/squeeze_and_shift_3/mul_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/chain/squeeze_and_shift_3/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_3/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/squeeze_and_shift_3/strided_slice_grad/Shape"
  input: "chain/squeeze_and_shift_3/strided_slice/stack"
  input: "chain/squeeze_and_shift_3/strided_slice/stack_1"
  input: "chain/squeeze_and_shift_3/strided_slice/stack_2"
  input: "gradients/AddN_4"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/chain/squeeze_and_shift_3/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/chain/squeeze_and_shift_3/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/chain/squeeze_and_shift_3/strided_slice_1_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_5"
  input: "gradients/chain/linear_symplectic_two_by_two_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_2/Reshape_grad/Reshape"
  input: "gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/transpose"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1"
  input: "gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_2/concat_6/axis"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/mod"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Shape"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice"
  op: "Slice"
  input: "gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/ConcatOffset"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1"
  op: "Slice"
  input: "gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/ConcatOffset:1"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/linear_symplectic_two_by_two_2/strided_slice_grad/Shape"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice/stack_2"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_2/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/linear_symplectic_two_by_two_2/strided_slice_1_grad/Shape"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack_2"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/chain/linear_symplectic_two_by_two_2/strided_slice_grad/StridedSliceGrad"
  input: "gradients/chain/linear_symplectic_two_by_two_2/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/chain/linear_symplectic_two_by_two_2/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_6"
  input: "gradients/chain/squeeze_and_shift_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/concat_grad/mod"
  op: "FloorMod"
  input: "chain/squeeze_and_shift_2/concat/axis"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/mod"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/concat_grad/Slice"
  op: "Slice"
  input: "gradients/chain/squeeze_and_shift_2/Reshape_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/ConcatOffset"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/chain/squeeze_and_shift_2/Reshape_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/ConcatOffset:1"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_2/mul_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_grad/Mul"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/Slice"
  input: "chain/squeeze_and_shift_2/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_2/mul_grad/Mul"
  input: "gradients/chain/squeeze_and_shift_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/mul_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_2/strided_slice"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_2/mul_grad/Mul_1"
  input: "gradients/chain/squeeze_and_shift_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/mul_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1"
  input: "chain/squeeze_and_shift_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul"
  input: "gradients/chain/squeeze_and_shift_2/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_2/Exp_1"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1"
  input: "gradients/chain/squeeze_and_shift_2/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/squeeze_and_shift_2/strided_slice_1_grad/Shape"
  input: "chain/squeeze_and_shift_2/strided_slice_1/stack"
  input: "chain/squeeze_and_shift_2/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift_2/strided_slice_1/stack_2"
  input: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Reshape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/mul_1_grad/Reshape_1"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Mul/ReadVariableOp"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape_1"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/chain/squeeze_and_shift_2/mul_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/chain/squeeze_and_shift_2/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_2/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/squeeze_and_shift_2/strided_slice_grad/Shape"
  input: "chain/squeeze_and_shift_2/strided_slice/stack"
  input: "chain/squeeze_and_shift_2/strided_slice/stack_1"
  input: "chain/squeeze_and_shift_2/strided_slice/stack_2"
  input: "gradients/AddN_7"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/chain/squeeze_and_shift_2/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/chain/squeeze_and_shift_2/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/chain/squeeze_and_shift_2/strided_slice_1_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_8"
  input: "gradients/chain/linear_symplectic_two_by_two_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_1/Reshape_grad/Reshape"
  input: "gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/transpose"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1"
  input: "gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_1/concat_6/axis"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/mod"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Shape"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice"
  op: "Slice"
  input: "gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/ConcatOffset"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1"
  op: "Slice"
  input: "gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/transpose"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/ConcatOffset:1"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/linear_symplectic_two_by_two_1/strided_slice_grad/Shape"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice/stack_2"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/linear_symplectic_two_by_two_1/strided_slice_1_grad/Shape"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack_2"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/chain/linear_symplectic_two_by_two_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients/chain/linear_symplectic_two_by_two_1/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/chain/linear_symplectic_two_by_two_1/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_9"
  input: "gradients/chain/squeeze_and_shift_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/concat_grad/mod"
  op: "FloorMod"
  input: "chain/squeeze_and_shift_1/concat/axis"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/mod"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/concat_grad/Slice"
  op: "Slice"
  input: "gradients/chain/squeeze_and_shift_1/Reshape_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/ConcatOffset"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/chain/squeeze_and_shift_1/Reshape_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/ConcatOffset:1"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_1/mul_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/Slice"
  input: "chain/squeeze_and_shift_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_1/mul_grad/Mul"
  input: "gradients/chain/squeeze_and_shift_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/mul_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_1/strided_slice"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_1/mul_grad/Mul_1"
  input: "gradients/chain/squeeze_and_shift_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/mul_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1"
  input: "chain/squeeze_and_shift_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul"
  input: "gradients/chain/squeeze_and_shift_1/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_1/Exp_1"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1"
  input: "gradients/chain/squeeze_and_shift_1/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/squeeze_and_shift_1/strided_slice_1_grad/Shape"
  input: "chain/squeeze_and_shift_1/strided_slice_1/stack"
  input: "chain/squeeze_and_shift_1/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift_1/strided_slice_1/stack_2"
  input: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Reshape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/mul_1_grad/Reshape_1"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Mul/ReadVariableOp"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape_1"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Shape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/chain/squeeze_and_shift_1/mul_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/chain/squeeze_and_shift_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/squeeze_and_shift_1/strided_slice_grad/Shape"
  input: "chain/squeeze_and_shift_1/strided_slice/stack"
  input: "chain/squeeze_and_shift_1/strided_slice/stack_1"
  input: "chain/squeeze_and_shift_1/strided_slice/stack_2"
  input: "gradients/AddN_10"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/chain/squeeze_and_shift_1/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/chain/squeeze_and_shift_1/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/chain/squeeze_and_shift_1/strided_slice_1_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_11"
  input: "gradients/chain/linear_symplectic_two_by_two/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/chain/linear_symplectic_two_by_two/Reshape_grad/Reshape"
  input: "gradients/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/transpose"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose"
  input: "gradients/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1"
  input: "gradients/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two/concat_6/axis"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/mod"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Shape"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice"
  op: "Slice"
  input: "gradients/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/transpose"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/ConcatOffset"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1"
  op: "Slice"
  input: "gradients/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/transpose"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/ConcatOffset:1"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/linear_symplectic_two_by_two/strided_slice_grad/Shape"
  input: "chain/linear_symplectic_two_by_two/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two/strided_slice/stack_2"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/linear_symplectic_two_by_two/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/linear_symplectic_two_by_two/strided_slice_1_grad/Shape"
  input: "chain/linear_symplectic_two_by_two/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two/strided_slice_1/stack_2"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/chain/linear_symplectic_two_by_two/strided_slice_grad/StridedSliceGrad"
  input: "gradients/chain/linear_symplectic_two_by_two/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/chain/linear_symplectic_two_by_two/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_12"
  input: "gradients/chain/squeeze_and_shift/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/concat_grad/mod"
  op: "FloorMod"
  input: "chain/squeeze_and_shift/concat/axis"
  input: "gradients/chain/squeeze_and_shift/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/chain/squeeze_and_shift/concat_grad/mod"
  input: "gradients/chain/squeeze_and_shift/concat_grad/Shape"
  input: "gradients/chain/squeeze_and_shift/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/concat_grad/Slice"
  op: "Slice"
  input: "gradients/chain/squeeze_and_shift/Reshape_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift/concat_grad/ConcatOffset"
  input: "gradients/chain/squeeze_and_shift/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/chain/squeeze_and_shift/Reshape_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift/concat_grad/ConcatOffset:1"
  input: "gradients/chain/squeeze_and_shift/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift/mul_grad/Shape"
  input: "gradients/chain/squeeze_and_shift/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_grad/Mul"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift/concat_grad/Slice"
  input: "chain/squeeze_and_shift/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift/mul_grad/Mul"
  input: "gradients/chain/squeeze_and_shift/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/mul_grad/Sum"
  input: "gradients/chain/squeeze_and_shift/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift/strided_slice"
  input: "gradients/chain/squeeze_and_shift/concat_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift/mul_grad/Mul_1"
  input: "gradients/chain/squeeze_and_shift/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/mul_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift/mul_1_grad/Shape"
  input: "gradients/chain/squeeze_and_shift/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift/concat_grad/Slice_1"
  input: "chain/squeeze_and_shift/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift/mul_1_grad/Mul"
  input: "gradients/chain/squeeze_and_shift/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/mul_1_grad/Sum"
  input: "gradients/chain/squeeze_and_shift/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift/Exp_1"
  input: "gradients/chain/squeeze_and_shift/concat_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1"
  input: "gradients/chain/squeeze_and_shift/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/squeeze_and_shift/strided_slice_1_grad/Shape"
  input: "chain/squeeze_and_shift/strided_slice_1/stack"
  input: "chain/squeeze_and_shift/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift/strided_slice_1/stack_2"
  input: "gradients/chain/squeeze_and_shift/mul_1_grad/Reshape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/mul_1_grad/Reshape_1"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Shape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape"
  input: "chain/squeeze_and_shift/irrotational_mlp/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape"
  input: "chain/squeeze_and_shift/irrotational_mlp/Softplus_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul"
  input: "chain/squeeze_and_shift/irrotational_mlp/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Shape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Shape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape"
  input: "chain/squeeze_and_shift/irrotational_mlp/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift/irrotational_mlp/Mul/ReadVariableOp"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape_1"
  input: "chain/squeeze_and_shift/irrotational_mlp/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Shape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_1"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape"
  input: "chain/squeeze_and_shift/irrotational_mlp/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "chain/squeeze_and_shift/irrotational_mlp/Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/irrotational_mlp/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/chain/squeeze_and_shift/mul_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/chain/squeeze_and_shift/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/chain/squeeze_and_shift/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/chain/squeeze_and_shift/strided_slice_grad/Shape"
  input: "chain/squeeze_and_shift/strided_slice/stack"
  input: "chain/squeeze_and_shift/strided_slice/stack_1"
  input: "chain/squeeze_and_shift/strided_slice/stack_2"
  input: "gradients/AddN_13"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/chain/squeeze_and_shift/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/chain/squeeze_and_shift/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/chain/squeeze_and_shift/strided_slice_1_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2"
  op: "StridedSlice"
  input: "ExpandDims"
  input: "strided_slice_2/stack"
  input: "strided_slice_2/stack_1"
  input: "strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_3"
  op: "StridedSlice"
  input: "ExpandDims"
  input: "strided_slice_3/stack"
  input: "strided_slice_3/stack_1"
  input: "strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_4"
  op: "StridedSlice"
  input: "gradients/AddN_14"
  input: "strided_slice_4/stack"
  input: "strided_slice_4/stack_1"
  input: "strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_5"
  op: "StridedSlice"
  input: "gradients/AddN_14"
  input: "strided_slice_5/stack"
  input: "strided_slice_5/stack_1"
  input: "strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "strided_slice_2"
  input: "strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/mul_1"
  op: "Mul"
  input: "strided_slice_3"
  input: "strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/sub"
  op: "Sub"
  input: "loss/mul"
  input: "loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Square"
  op: "Square"
  input: "loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Mean"
  op: "Mean"
  input: "loss/Square"
  input: "loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/Fill"
  op: "Fill"
  input: "gradients_1/Shape"
  input: "gradients_1/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/loss/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/Fill"
  input: "gradients_1/loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/loss/Mean_grad/Tile"
  op: "Tile"
  input: "gradients_1/loss/Mean_grad/Reshape"
  input: "gradients_1/loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients_1/loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/loss/Mean_grad/Tile"
  input: "gradients_1/loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/Square_grad/Const"
  op: "Const"
  input: "^gradients_1/loss/Mean_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/loss/Square_grad/Mul"
  op: "Mul"
  input: "loss/sub"
  input: "gradients_1/loss/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/loss/Mean_grad/truediv"
  input: "gradients_1/loss/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/loss/Square_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/loss/Square_grad/Mul_1"
  input: "^gradients_1/loss/sub_grad/Neg"
}
node {
  name: "gradients_1/loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/loss/Square_grad/Mul_1"
  input: "^gradients_1/loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/loss/Square_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/loss/sub_grad/Neg"
  input: "^gradients_1/loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/loss/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/loss/sub_grad/tuple/control_dependency"
  input: "strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/loss/sub_grad/tuple/control_dependency"
  input: "strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/loss/mul_grad/Mul"
  input: "^gradients_1/loss/mul_grad/Mul_1"
}
node {
  name: "gradients_1/loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/loss/mul_grad/Mul"
  input: "^gradients_1/loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/loss/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/loss/mul_grad/Mul_1"
  input: "^gradients_1/loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/loss/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/loss/sub_grad/tuple/control_dependency_1"
  input: "strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/loss/sub_grad/tuple/control_dependency_1"
  input: "strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/loss/mul_1_grad/Mul"
  input: "^gradients_1/loss/mul_1_grad/Mul_1"
}
node {
  name: "gradients_1/loss/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/loss/mul_1_grad/Mul"
  input: "^gradients_1/loss/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/loss/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/loss/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/loss/mul_1_grad/Mul_1"
  input: "^gradients_1/loss/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/strided_slice_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/strided_slice_5_grad/Shape"
  input: "strided_slice_5/stack"
  input: "strided_slice_5/stack_1"
  input: "strided_slice_5/stack_2"
  input: "gradients_1/loss/mul_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/strided_slice_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/strided_slice_4_grad/Shape"
  input: "strided_slice_4/stack"
  input: "strided_slice_4/stack_1"
  input: "strided_slice_4/stack_2"
  input: "gradients_1/loss/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/AddN"
  op: "AddN"
  input: "gradients_1/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients_1/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/AddN"
}
node {
  name: "gradients_1/gradients/AddN_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/AddN"
  input: "^gradients_1/gradients/AddN_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/AddN"
  input: "^gradients_1/gradients/AddN_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_14_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift/strided_slice_1/stack"
  input: "chain/squeeze_and_shift/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_14_grad/tuple/control_dependency_1"
  input: "chain/squeeze_and_shift/strided_slice/stack"
  input: "chain/squeeze_and_shift/strided_slice/stack_1"
  input: "chain/squeeze_and_shift/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
}
node {
  name: "gradients_1/gradients/AddN_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "^gradients_1/gradients/AddN_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "^gradients_1/gradients/AddN_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/AddN_13_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Reshape_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Reshape_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/AddN_13_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Reshape_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift/mul_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Reshape_grad/Reshape_grad/Reshape"
  input: "chain/squeeze_and_shift/irrotational_mlp/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Reshape_grad/Reshape_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/MatMul_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Tile"
  input: "chain/squeeze_and_shift/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift/concat_grad/Slice"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Mul_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Sum_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Reshape_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/Rank"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/concat_grad/ConcatOffset"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/sub"
  input: "gradients/chain/squeeze_and_shift/concat_grad/ConcatOffset"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/sub_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/Reshape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Tile"
  input: "chain/squeeze_and_shift/irrotational_mlp/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Tile"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/Neg"
  op: "Neg"
  input: "chain/squeeze_and_shift/irrotational_mlp/add"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/Exp"
  op: "Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/add/y"
  op: "Const"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/add"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/Exp_1"
  op: "Exp"
  input: "chain/squeeze_and_shift/irrotational_mlp/add"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/add_1"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/Exp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/truediv"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/truediv"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/BroadcastGradientArgs:1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Tile"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift/irrotational_mlp/Mul/ReadVariableOp"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Mul_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Sum_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Reshape_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Tile"
  input: "chain/squeeze_and_shift/irrotational_mlp/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Tile"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/Neg"
  op: "Neg"
  input: "chain/squeeze_and_shift/irrotational_mlp/add_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/Exp"
  op: "Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/add/y"
  op: "Const"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/add"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/Exp_1"
  op: "Exp"
  input: "chain/squeeze_and_shift/irrotational_mlp/add_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/add_1"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/Exp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/truediv"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/truediv"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift/irrotational_mlp/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/MatMul_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_grad/Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_1"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift/mul_1_grad/BroadcastGradientArgs:1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Reshape_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Tile"
  input: "gradients/chain/squeeze_and_shift/concat_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift/Exp_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Mul_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Sum_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Reshape_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/Rank"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift/concat_grad/ConcatOffset:1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/sub"
  input: "gradients/chain/squeeze_and_shift/concat_grad/ConcatOffset:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/sub_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/Reshape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_2"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/Pad"
  input: "gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_1_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/concat_grad/Slice_grad/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/Reshape_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift/Reshape_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_2"
  input: "gradients_1/gradients/chain/squeeze_and_shift/Reshape_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift/Reshape_grad/Reshape_grad/Reshape"
}
node {
  name: "gradients_1/gradients/AddN_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_12_grad/tuple/control_dependency"
  input: "chain/linear_symplectic_two_by_two/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_12_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/Rank"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/ConcatOffset"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/Shape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/sub"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/ConcatOffset"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/sub_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/Reshape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/Rank"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/ConcatOffset:1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/sub"
  input: "gradients/chain/linear_symplectic_two_by_two/concat_6_grad/ConcatOffset:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/sub_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/Reshape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_3"
  op: "AddN"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/Pad"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_grad/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/AddN_3"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/MatMul"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/MatMul"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/Reshape_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two/Reshape_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/transpose_grad/transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/Reshape_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two/Reshape_grad/Reshape_grad/Reshape"
}
node {
  name: "gradients_1/gradients/AddN_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_11_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_1/strided_slice_1/stack"
  input: "chain/squeeze_and_shift_1/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_11_grad/tuple/control_dependency_1"
  input: "chain/squeeze_and_shift_1/strided_slice/stack"
  input: "chain/squeeze_and_shift_1/strided_slice/stack_1"
  input: "chain/squeeze_and_shift_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
}
node {
  name: "gradients_1/gradients/AddN_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "^gradients_1/gradients/AddN_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "^gradients_1/gradients/AddN_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/AddN_10_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/AddN_10_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_1/mul_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape_grad/Reshape_grad/Reshape"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape_grad/Reshape_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/MatMul_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Tile"
  input: "chain/squeeze_and_shift_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/Slice"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Mul_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Sum_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Reshape_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/Rank"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/ConcatOffset"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/sub"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/ConcatOffset"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/sub_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/Reshape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Tile"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Tile"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/Neg"
  op: "Neg"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/Exp"
  op: "Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/add/y"
  op: "Const"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/add"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/Exp_1"
  op: "Exp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/add_1"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/Exp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/truediv"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/truediv"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/BroadcastGradientArgs:1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Tile"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Mul/ReadVariableOp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Mul_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Sum_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Reshape_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Tile"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Tile"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/Neg"
  op: "Neg"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/Exp"
  op: "Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/add/y"
  op: "Const"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/add"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/Exp_1"
  op: "Exp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/add_1"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/Exp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/truediv"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/truediv"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/MatMul_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_grad/Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_4"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_4"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_1/mul_1_grad/BroadcastGradientArgs:1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Reshape_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Tile"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_1/Exp_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Mul_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Sum_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Reshape_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/Rank"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/ConcatOffset:1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/sub"
  input: "gradients/chain/squeeze_and_shift_1/concat_grad/ConcatOffset:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/sub_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/Reshape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_5"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/Pad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_1_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/concat_grad/Slice_grad/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/Reshape_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_1/Reshape_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_5"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/Reshape_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_1/Reshape_grad/Reshape_grad/Reshape"
}
node {
  name: "gradients_1/gradients/AddN_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_9_grad/tuple/control_dependency"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_9_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/Rank"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/ConcatOffset"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/Shape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/sub"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/ConcatOffset"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/sub_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/Reshape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/Rank"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/ConcatOffset:1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/sub"
  input: "gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/ConcatOffset:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/sub_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/Reshape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_6"
  op: "AddN"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/Pad"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_grad/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/AddN_6"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/MatMul"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/MatMul"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/Reshape_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/Reshape_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/transpose_grad/transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/Reshape_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_1/Reshape_grad/Reshape_grad/Reshape"
}
node {
  name: "gradients_1/gradients/AddN_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_1/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_1/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_8_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_2/strided_slice_1/stack"
  input: "chain/squeeze_and_shift_2/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_8_grad/tuple/control_dependency_1"
  input: "chain/squeeze_and_shift_2/strided_slice/stack"
  input: "chain/squeeze_and_shift_2/strided_slice/stack_1"
  input: "chain/squeeze_and_shift_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
}
node {
  name: "gradients_1/gradients/AddN_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "^gradients_1/gradients/AddN_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "^gradients_1/gradients/AddN_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/AddN_7_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/AddN_7_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_2/mul_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape_grad/Reshape_grad/Reshape"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape_grad/Reshape_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/MatMul_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Tile"
  input: "chain/squeeze_and_shift_2/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/Slice"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Mul_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Sum_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Reshape_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/Rank"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/ConcatOffset"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/sub"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/ConcatOffset"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/sub_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/Reshape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Tile"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Tile"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/Neg"
  op: "Neg"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/Exp"
  op: "Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/add/y"
  op: "Const"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/add"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/Exp_1"
  op: "Exp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/add_1"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/Exp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/truediv"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/truediv"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/BroadcastGradientArgs:1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Tile"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Mul/ReadVariableOp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Mul_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Sum_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Reshape_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Tile"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Tile"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/Neg"
  op: "Neg"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/Exp"
  op: "Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/add/y"
  op: "Const"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/add"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/Exp_1"
  op: "Exp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/add_1"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/Exp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/truediv"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/truediv"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/MatMul_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_grad/Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_7"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_7"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_2/mul_1_grad/BroadcastGradientArgs:1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Reshape_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Tile"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_2/Exp_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Mul_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Sum_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Reshape_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/Rank"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/ConcatOffset:1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/sub"
  input: "gradients/chain/squeeze_and_shift_2/concat_grad/ConcatOffset:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/sub_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/Reshape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_8"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/Pad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_1_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/concat_grad/Slice_grad/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/Reshape_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_2/Reshape_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_8"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/Reshape_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_2/Reshape_grad/Reshape_grad/Reshape"
}
node {
  name: "gradients_1/gradients/AddN_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_6_grad/tuple/control_dependency"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_6_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/Rank"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/ConcatOffset"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/Shape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/sub"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/ConcatOffset"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/sub_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/Reshape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/Rank"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/ConcatOffset:1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/sub"
  input: "gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/ConcatOffset:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/sub_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/Reshape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_9"
  op: "AddN"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/Pad"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_grad/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/AddN_9"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/MatMul"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/MatMul"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/Reshape_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/Reshape_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/transpose_grad/transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/Reshape_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_2/Reshape_grad/Reshape_grad/Reshape"
}
node {
  name: "gradients_1/gradients/AddN_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_2/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_2/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_5_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_3/strided_slice_1/stack"
  input: "chain/squeeze_and_shift_3/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_5_grad/tuple/control_dependency_1"
  input: "chain/squeeze_and_shift_3/strided_slice/stack"
  input: "chain/squeeze_and_shift_3/strided_slice/stack_1"
  input: "chain/squeeze_and_shift_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
}
node {
  name: "gradients_1/gradients/AddN_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "^gradients_1/gradients/AddN_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "^gradients_1/gradients/AddN_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/AddN_4_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/AddN_4_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_3/mul_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape_grad/Reshape_grad/Reshape"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape_grad/Reshape_grad/Reshape"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/MatMul_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Tile"
  input: "chain/squeeze_and_shift_3/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/Slice"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Mul_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Sum_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Reshape_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/Rank"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/ConcatOffset"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/sub"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/ConcatOffset"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/sub_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/Reshape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Tile"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Tile"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/Neg"
  op: "Neg"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/Exp"
  op: "Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/add/y"
  op: "Const"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/add"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/Exp_1"
  op: "Exp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/add_1"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/Exp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/truediv"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/SoftplusGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/truediv"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/BroadcastGradientArgs:1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Tile"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Mul/ReadVariableOp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Mul_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Sum_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Reshape_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Tile"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Tile"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/Neg"
  op: "Neg"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/Exp"
  op: "Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/add/y"
  op: "Const"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/add"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/Exp"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/Exp_1"
  op: "Exp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/add_1"
  op: "Add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/Exp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/truediv"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/SoftplusGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/truediv"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/MatMul"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/MatMul_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_grad/Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_10"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_10"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/add"
  op: "Add"
  input: "gradients/chain/squeeze_and_shift_3/mul_1_grad/BroadcastGradientArgs:1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/add"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/range/start"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Size"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/range"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/mod"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/DynamicStitch"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Reshape_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Shape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Tile"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Mul"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_3/Exp_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Mul_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Sum_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Reshape_1"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/Rank"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/ConcatOffset:1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/sub"
  input: "gradients/chain/squeeze_and_shift_3/concat_grad/ConcatOffset:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/sub_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/Reshape"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/Reshape_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_11"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/Pad"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_1_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/concat_grad/Slice_grad/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/Reshape_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/squeeze_and_shift_3/Reshape_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_11"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/Reshape_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/squeeze_and_shift_3/Reshape_grad/Reshape_grad/Reshape"
}
node {
  name: "gradients_1/gradients/AddN_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_3_grad/tuple/control_dependency"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_3_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/Rank"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/ConcatOffset"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/Shape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/sub"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/ConcatOffset"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/sub_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/Reshape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/stack"
  op: "Pack"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/Rank"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/ConcatOffset:1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/sub"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/Shape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/sub_1"
  op: "Sub"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/sub"
  input: "gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/ConcatOffset:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/sub_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/Reshape_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/Pad"
  op: "Pad"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_12"
  op: "AddN"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/Pad"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_grad/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/AddN_12"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/MatMul"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/MatMul"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/Reshape_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/Reshape_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/transpose_grad/transpose"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/Reshape_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/chain/linear_symplectic_two_by_two_3/Reshape_grad/Reshape_grad/Reshape"
}
node {
  name: "gradients_1/gradients/AddN_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_3/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/Reshape_grad/Reshape_grad/Reshape"
  input: "^gradients_1/gradients/AddN_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_3/Reshape_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_2_grad/tuple/control_dependency"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_1/gradients/AddN_2_grad/tuple/control_dependency_1"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
}
node {
  name: "gradients_1/gradients/AddN_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "^gradients_1/gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
  input: "^gradients_1/gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/strided_slice_grad/StridedSliceGrad_grad/StridedSlice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/transpose_1_grad/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/transpose_1_grad/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/gradients/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_1/gradients/einsum/transpose_1_grad/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/AddN_1_grad/tuple/control_dependency"
  input: "gradients/Square_1_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/gradients/AddN_1_grad/tuple/control_dependency"
  input: "gradients/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/Square_1_grad/Mul_1_grad/Mul"
  input: "^gradients_1/gradients/Square_1_grad/Mul_1_grad/Mul_1"
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/Square_1_grad/Mul_1_grad/Mul"
  input: "^gradients_1/gradients/Square_1_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/Square_1_grad/Mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/Square_1_grad/Mul_1_grad/Mul_1"
  input: "^gradients_1/gradients/Square_1_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/Square_1_grad/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/transpose_grad/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/transpose_grad/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/gradients/AddN_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/einsum/transpose_grad/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/ExpandDims_1_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/ExpandDims_1_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/einsum/transpose_1_grad/transpose_grad/transpose"
  input: "gradients_1/gradients/einsum/ExpandDims_1_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/Square_1_grad/Mul_grad/Shape"
  input: "gradients_1/gradients/Square_1_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/Square_1_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients/Square_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/Square_1_grad/Mul_grad/Mul"
  input: "gradients_1/gradients/Square_1_grad/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/Square_1_grad/Mul_grad/Sum"
  input: "gradients_1/gradients/Square_1_grad/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_grad/Mul_1"
  op: "Mul"
  input: "strided_slice"
  input: "gradients_1/gradients/Square_1_grad/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/Square_1_grad/Mul_grad/Mul_1"
  input: "gradients_1/gradients/Square_1_grad/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/Square_1_grad/Mul_grad/Sum_1"
  input: "gradients_1/gradients/Square_1_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/Square_1_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/Square_1_grad/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/Square_1_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/Square_1_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/Square_1_grad/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_1_grad/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/Square_1_grad/Mul_grad/Reshape_1"
  input: "^gradients_1/gradients/Square_1_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/Square_1_grad/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/ExpandDims_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/ExpandDims_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/einsum/transpose_grad/transpose_grad/transpose"
  input: "gradients_1/gradients/einsum/ExpandDims_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/einsum/ExpandDims_1_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/einsum/Mul_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/einsum/ExpandDims_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/einsum/Mul_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/add"
  op: "Add"
  input: "gradients/einsum/Mul_grad/BroadcastGradientArgs:1"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/add"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/range/start"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Size"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape_1"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/range"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/mod"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/DynamicStitch"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/einsum/Mul_grad/Reshape_1_grad/Reshape"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Reshape"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/add"
  op: "Add"
  input: "gradients/einsum/Mul_grad/BroadcastGradientArgs"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/add"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/range/start"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Size"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape_1"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/range"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/mod"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/DynamicStitch"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/einsum/Mul_grad/Reshape_grad/Reshape"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Reshape"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Shape"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Tile"
  input: "gradients/einsum/transpose_2_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Mul"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Sum"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "einsum/ExpandDims"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Mul_1"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Sum_1"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Reshape"
  input: "^gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Reshape_1"
  input: "^gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Shape"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Tile"
  input: "einsum/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Mul"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Sum"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/einsum/transpose_2_grad/transpose"
  input: "gradients_1/gradients/einsum/Mul_grad/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Mul_1"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Sum_1"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/einsum/Mul_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/einsum/Mul_grad/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/einsum/Mul_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/Reshape_1"
  input: "^gradients_1/gradients/einsum/Mul_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_13"
  op: "AddN"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/transpose_2_grad/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/einsum/transpose_2_grad/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/AddN_13"
  input: "gradients_1/gradients/einsum/transpose_2_grad/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/einsum/transpose_2_grad/transpose_grad/transpose"
}
node {
  name: "gradients_1/gradients/AddN_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/einsum/transpose_2_grad/transpose_grad/transpose"
  input: "^gradients_1/gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/transpose_2_grad/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/AddN_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/einsum/transpose_2_grad/transpose_grad/transpose"
  input: "^gradients_1/gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/transpose_2_grad/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/transpose_grad/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/transpose_grad/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/gradients/AddN_grad/tuple/control_dependency_1"
  input: "gradients_1/gradients/transpose_grad/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/sub_grad/Neg_grad/Neg"
  op: "Neg"
  input: "gradients_1/gradients/transpose_grad/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_14"
  op: "AddN"
  input: "gradients_1/gradients/AddN_grad/tuple/control_dependency"
  input: "gradients_1/gradients/sub_grad/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/transpose_2_grad/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/AddN_14"
  input: "gradients/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/AddN_14"
  input: "gradients/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/Square_grad/Mul_1_grad/Mul"
  input: "^gradients_1/gradients/Square_grad/Mul_1_grad/Mul_1"
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/Square_grad/Mul_1_grad/Mul"
  input: "^gradients_1/gradients/Square_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/Square_grad/Mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/Square_grad/Mul_1_grad/Mul_1"
  input: "^gradients_1/gradients/Square_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/Square_grad/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gradients/Square_grad/Mul_grad/Shape"
  input: "gradients_1/gradients/Square_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/gradients/Square_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gradients/Square_grad/Mul_grad/Mul"
  input: "gradients_1/gradients/Square_grad/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gradients/Square_grad/Mul_grad/Sum"
  input: "gradients_1/gradients/Square_grad/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_grad/Mul_1"
  op: "Mul"
  input: "sub"
  input: "gradients_1/gradients/Square_grad/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gradients/Square_grad/Mul_grad/Mul_1"
  input: "gradients_1/gradients/Square_grad/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gradients/Square_grad/Mul_grad/Sum_1"
  input: "gradients_1/gradients/Square_grad/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/Square_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/Square_grad/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/Square_grad/Mul_grad/Reshape"
  input: "^gradients_1/gradients/Square_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/Square_grad/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gradients/Square_grad/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gradients/Square_grad/Mul_grad/Reshape_1"
  input: "^gradients_1/gradients/Square_grad/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/Square_grad/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/gradients/Square_grad/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gradients/Square_grad/Mul_grad/tuple/control_dependency"
  input: "^gradients_1/sub_grad/Neg"
}
node {
  name: "gradients_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gradients/Square_grad/Mul_grad/tuple/control_dependency"
  input: "^gradients_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/Square_grad/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/sub_grad/Neg"
  input: "^gradients_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/sub_grad/tuple/control_dependency_1"
  input: "gradients_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_15"
  op: "AddN"
  input: "gradients_1/sub_grad/tuple/control_dependency"
  input: "gradients_1/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/Square_grad/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients_1/AddN_15"
  input: "gradients_1/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/einsum/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/einsum/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/einsum/Mul_grad/Shape"
  input: "gradients_1/einsum/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/einsum/transpose_2_grad/transpose"
  input: "einsum/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/einsum/Mul_grad/Mul"
  input: "gradients_1/einsum/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/einsum/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/einsum/Mul_grad/Sum"
  input: "gradients_1/einsum/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/Mul_grad/Mul_1"
  op: "Mul"
  input: "einsum/ExpandDims"
  input: "gradients_1/einsum/transpose_2_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/einsum/Mul_grad/Mul_1"
  input: "gradients_1/einsum/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/einsum/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/einsum/Mul_grad/Sum_1"
  input: "gradients_1/einsum/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/einsum/Mul_grad/Reshape"
  input: "^gradients_1/einsum/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/einsum/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/einsum/Mul_grad/Reshape"
  input: "^gradients_1/einsum/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/einsum/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/einsum/Mul_grad/Reshape_1"
  input: "^gradients_1/einsum/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/einsum/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_16"
  op: "AddN"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/tuple/control_dependency"
  input: "gradients_1/einsum/Mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/einsum/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_16"
  input: "gradients_1/einsum/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_17"
  op: "AddN"
  input: "gradients_1/gradients/einsum/Mul_grad/Mul_grad/tuple/control_dependency_1"
  input: "gradients_1/einsum/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/einsum/Mul_grad/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/einsum/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_17"
  input: "gradients_1/einsum/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/einsum/ExpandDims_grad/Reshape"
  input: "gradients_1/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients_1/einsum/ExpandDims_1_grad/Reshape"
  input: "gradients_1/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_18"
  op: "AddN"
  input: "gradients_1/gradients/Square_1_grad/Mul_grad/tuple/control_dependency"
  input: "gradients_1/einsum/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/Square_1_grad/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/strided_slice_grad/Shape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  input: "gradients_1/AddN_18"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/strided_slice_1_grad/Shape"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  input: "gradients_1/einsum/transpose_1_grad/transpose"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/AddN_19"
  op: "AddN"
  input: "gradients_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients_1/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_19"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/Reshape_grad/Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/transpose"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_2_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_20"
  op: "AddN"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/AddN_20"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_3/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_3/concat_2/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_3/concat_6/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/einsum/transpose_1_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_3/concat/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_3/concat_1/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_2_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/strided_slice_grad/Shape"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice/stack_2"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/strided_slice_1_grad/Shape"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two_3/strided_slice_1/stack_2"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_6_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two_3/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Neg"
  op: "Neg"
  input: "chain/linear_symplectic_two_by_two_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Neg"
  input: "chain/linear_symplectic_two_by_two_3/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/RealDiv_1"
  input: "chain/linear_symplectic_two_by_two_3/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/mul"
  op: "Mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Sum_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Reshape_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_21"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/strided_slice_grad/StridedSliceGrad"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_21"
  input: "gradients_1/chain/squeeze_and_shift_3/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Sum_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Reshape_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_22"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/truediv_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/concat_grad/mod"
  op: "FloorMod"
  input: "chain/squeeze_and_shift_3/concat/axis"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/mod"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/concat_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/squeeze_and_shift_3/Reshape_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/ConcatOffset"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/squeeze_and_shift_3/Reshape_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/ConcatOffset:1"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_3/concat_grad/Slice"
  input: "^gradients_1/chain/squeeze_and_shift_3/concat_grad/Slice_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/Slice"
  input: "^gradients_1/chain/squeeze_and_shift_3/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/Slice_1"
  input: "^gradients_1/chain/squeeze_and_shift_3/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two_3/s3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/add_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two_3/s2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/Mul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/Mul_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/Mul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/Mul_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_3/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Mul"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_3/strided_slice"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Mul_1"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_3/mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_3/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/tuple/control_dependency_1"
  input: "chain/squeeze_and_shift_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Mul"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_3/Exp_1"
  input: "gradients_1/chain/squeeze_and_shift_3/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Mul_1"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_3/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_3/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_23"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_24"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_3/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_3/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_25"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_grad/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/Exp_grad/mul"
  op: "Mul"
  input: "gradients_1/AddN_25"
  input: "chain/squeeze_and_shift_3/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_26"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/mul_1_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/Exp_1_grad/mul"
  op: "Mul"
  input: "gradients_1/AddN_26"
  input: "chain/squeeze_and_shift_3/Exp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_3/mul_1_grad/tuple/control_dependency_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/chain/squeeze_and_shift_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/chain/squeeze_and_shift_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/Neg_grad/Neg"
  op: "Neg"
  input: "gradients_1/chain/squeeze_and_shift_3/Exp_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/squeeze_and_shift_3/strided_slice_1_grad/Shape"
  input: "chain/squeeze_and_shift_3/strided_slice_1/stack"
  input: "chain/squeeze_and_shift_3/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift_3/strided_slice_1/stack_2"
  input: "gradients_1/chain/squeeze_and_shift_3/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/add_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/ExpandDims_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_27"
  op: "AddN"
  input: "gradients_1/chain/squeeze_and_shift_3/Exp_grad/mul"
  input: "gradients_1/chain/squeeze_and_shift_3/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/Exp_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_1"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_28"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_29"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_1_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_29"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/AddN_29"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Mul/ReadVariableOp"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_30"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Mul_grad/tuple/control_dependency_1"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_31"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/Softplus_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_31"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/AddN_31"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_1"
  input: "^gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_32"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_33"
  op: "AddN"
  input: "gradients_1/chain/squeeze_and_shift_3/mul_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_3/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/squeeze_and_shift_3/strided_slice_grad/Shape"
  input: "chain/squeeze_and_shift_3/strided_slice/stack"
  input: "chain/squeeze_and_shift_3/strided_slice/stack_1"
  input: "chain/squeeze_and_shift_3/strided_slice/stack_2"
  input: "gradients_1/AddN_33"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/AddN_34"
  op: "AddN"
  input: "gradients_1/AddN_28"
  input: "gradients_1/AddN_32"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_3/irrotational_mlp_3/MatMul_1_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_35"
  op: "AddN"
  input: "gradients_1/chain/squeeze_and_shift_3/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients_1/chain/squeeze_and_shift_3/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_3/strided_slice_1_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_35"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/Reshape_grad/Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/transpose"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_2_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_36"
  op: "AddN"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/AddN_36"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_2/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_2/concat_2/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_2/concat_6/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/einsum/transpose_1_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_2/concat/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_2/concat_1/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_2_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/strided_slice_grad/Shape"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice/stack_2"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/strided_slice_1_grad/Shape"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two_2/strided_slice_1/stack_2"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_6_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two_2/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Neg"
  op: "Neg"
  input: "chain/linear_symplectic_two_by_two_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Neg"
  input: "chain/linear_symplectic_two_by_two_2/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/RealDiv_1"
  input: "chain/linear_symplectic_two_by_two_2/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/mul"
  op: "Mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Sum_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Reshape_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_37"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/strided_slice_grad/StridedSliceGrad"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_37"
  input: "gradients_1/chain/squeeze_and_shift_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Sum_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Reshape_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_38"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/truediv_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/concat_grad/mod"
  op: "FloorMod"
  input: "chain/squeeze_and_shift_2/concat/axis"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/mod"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/concat_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/squeeze_and_shift_2/Reshape_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/ConcatOffset"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/squeeze_and_shift_2/Reshape_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/ConcatOffset:1"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_2/concat_grad/Slice"
  input: "^gradients_1/chain/squeeze_and_shift_2/concat_grad/Slice_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/Slice"
  input: "^gradients_1/chain/squeeze_and_shift_2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/Slice_1"
  input: "^gradients_1/chain/squeeze_and_shift_2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two_2/s3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/add_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two_2/s2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/Mul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/Mul_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/Mul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/Mul_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_2/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Mul"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_2/strided_slice"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Mul_1"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_2/mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_2/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/tuple/control_dependency_1"
  input: "chain/squeeze_and_shift_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Mul"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_2/Exp_1"
  input: "gradients_1/chain/squeeze_and_shift_2/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Mul_1"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_39"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_40"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_2/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_41"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_grad/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/Exp_grad/mul"
  op: "Mul"
  input: "gradients_1/AddN_41"
  input: "chain/squeeze_and_shift_2/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_42"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/mul_1_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/Exp_1_grad/mul"
  op: "Mul"
  input: "gradients_1/AddN_42"
  input: "chain/squeeze_and_shift_2/Exp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_2/mul_1_grad/tuple/control_dependency_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/chain/squeeze_and_shift_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/chain/squeeze_and_shift_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/Neg_grad/Neg"
  op: "Neg"
  input: "gradients_1/chain/squeeze_and_shift_2/Exp_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/squeeze_and_shift_2/strided_slice_1_grad/Shape"
  input: "chain/squeeze_and_shift_2/strided_slice_1/stack"
  input: "chain/squeeze_and_shift_2/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift_2/strided_slice_1/stack_2"
  input: "gradients_1/chain/squeeze_and_shift_2/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/add_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/ExpandDims_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_43"
  op: "AddN"
  input: "gradients_1/chain/squeeze_and_shift_2/Exp_grad/mul"
  input: "gradients_1/chain/squeeze_and_shift_2/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/Exp_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_1"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_44"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_45"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_1_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_45"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/AddN_45"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Mul/ReadVariableOp"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_46"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Mul_grad/tuple/control_dependency_1"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_47"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/Softplus_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_47"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/AddN_47"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_1"
  input: "^gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_48"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_49"
  op: "AddN"
  input: "gradients_1/chain/squeeze_and_shift_2/mul_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_2/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/squeeze_and_shift_2/strided_slice_grad/Shape"
  input: "chain/squeeze_and_shift_2/strided_slice/stack"
  input: "chain/squeeze_and_shift_2/strided_slice/stack_1"
  input: "chain/squeeze_and_shift_2/strided_slice/stack_2"
  input: "gradients_1/AddN_49"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/AddN_50"
  op: "AddN"
  input: "gradients_1/AddN_44"
  input: "gradients_1/AddN_48"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_2/irrotational_mlp_2/MatMul_1_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_51"
  op: "AddN"
  input: "gradients_1/chain/squeeze_and_shift_2/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients_1/chain/squeeze_and_shift_2/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_2/strided_slice_1_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_51"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/Reshape_grad/Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/transpose"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_2_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_52"
  op: "AddN"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/AddN_52"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two_1/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_1/concat_2/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_1/concat_6/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/einsum/transpose_1_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_1/concat/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two_1/concat_1/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_2_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/strided_slice_grad/Shape"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice/stack_2"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/strided_slice_1_grad/Shape"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two_1/strided_slice_1/stack_2"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_6_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two_1/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Neg"
  op: "Neg"
  input: "chain/linear_symplectic_two_by_two_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Neg"
  input: "chain/linear_symplectic_two_by_two_1/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/RealDiv_1"
  input: "chain/linear_symplectic_two_by_two_1/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/mul"
  op: "Mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Sum_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Reshape_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_53"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_53"
  input: "gradients_1/chain/squeeze_and_shift_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Sum_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Reshape_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_54"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/truediv_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/concat_grad/mod"
  op: "FloorMod"
  input: "chain/squeeze_and_shift_1/concat/axis"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/mod"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/concat_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/squeeze_and_shift_1/Reshape_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/ConcatOffset"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/squeeze_and_shift_1/Reshape_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/ConcatOffset:1"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_1/concat_grad/Slice"
  input: "^gradients_1/chain/squeeze_and_shift_1/concat_grad/Slice_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/Slice"
  input: "^gradients_1/chain/squeeze_and_shift_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/Slice_1"
  input: "^gradients_1/chain/squeeze_and_shift_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two_1/s3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/add_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two_1/s2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/Mul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/Mul_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/Mul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/Mul_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Mul"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_1/strided_slice"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Mul_1"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_1/mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_1/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/tuple/control_dependency_1"
  input: "chain/squeeze_and_shift_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Mul"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_1/Exp_1"
  input: "gradients_1/chain/squeeze_and_shift_1/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Mul_1"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_55"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_56"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two_1/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_57"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_grad/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/Exp_grad/mul"
  op: "Mul"
  input: "gradients_1/AddN_57"
  input: "chain/squeeze_and_shift_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_58"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/mul_1_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/Exp_1_grad/mul"
  op: "Mul"
  input: "gradients_1/AddN_58"
  input: "chain/squeeze_and_shift_1/Exp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_1/mul_1_grad/tuple/control_dependency_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/chain/squeeze_and_shift_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/chain/squeeze_and_shift_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/Neg_grad/Neg"
  op: "Neg"
  input: "gradients_1/chain/squeeze_and_shift_1/Exp_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/squeeze_and_shift_1/strided_slice_1_grad/Shape"
  input: "chain/squeeze_and_shift_1/strided_slice_1/stack"
  input: "chain/squeeze_and_shift_1/strided_slice_1/stack_1"
  input: "chain/squeeze_and_shift_1/strided_slice_1/stack_2"
  input: "gradients_1/chain/squeeze_and_shift_1/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/add_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/ExpandDims_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_59"
  op: "AddN"
  input: "gradients_1/chain/squeeze_and_shift_1/Exp_grad/mul"
  input: "gradients_1/chain/squeeze_and_shift_1/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/Exp_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_1"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_60"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_61"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_1_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_61"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/AddN_61"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Mul/ReadVariableOp"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_62"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Mul_grad/tuple/control_dependency_1"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_63"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/Softplus_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_63"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/AddN_63"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_1"
  input: "^gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_64"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_65"
  op: "AddN"
  input: "gradients_1/chain/squeeze_and_shift_1/mul_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/squeeze_and_shift_1/strided_slice_grad/Shape"
  input: "chain/squeeze_and_shift_1/strided_slice/stack"
  input: "chain/squeeze_and_shift_1/strided_slice/stack_1"
  input: "chain/squeeze_and_shift_1/strided_slice/stack_2"
  input: "gradients_1/AddN_65"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/AddN_66"
  op: "AddN"
  input: "gradients_1/AddN_60"
  input: "gradients_1/AddN_64"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift_1/irrotational_mlp_1/MatMul_1_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_67"
  op: "AddN"
  input: "gradients_1/chain/squeeze_and_shift_1/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients_1/chain/squeeze_and_shift_1/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift_1/strided_slice_1_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_67"
  input: "gradients_1/chain/linear_symplectic_two_by_two/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two/Reshape_grad/Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/transpose"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_2_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_68"
  op: "AddN"
  input: "gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/AddN_68"
  input: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "chain/linear_symplectic_two_by_two/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two/einsum/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two/concat_2/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two/concat_6/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two/einsum/transpose_1_grad/transpose"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two/concat/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/mod"
  op: "FloorMod"
  input: "chain/linear_symplectic_two_by_two/concat_1/axis"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/mod"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/ConcatOffset"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_2_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/ConcatOffset:1"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Slice_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Slice"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Slice_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/linear_symplectic_two_by_two/strided_slice_grad/Shape"
  input: "chain/linear_symplectic_two_by_two/strided_slice/stack"
  input: "chain/linear_symplectic_two_by_two/strided_slice/stack_1"
  input: "chain/linear_symplectic_two_by_two/strided_slice/stack_2"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/chain/linear_symplectic_two_by_two/strided_slice_1_grad/Shape"
  input: "chain/linear_symplectic_two_by_two/strided_slice_1/stack"
  input: "chain/linear_symplectic_two_by_two/strided_slice_1/stack_1"
  input: "chain/linear_symplectic_two_by_two/strided_slice_1/stack_2"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_6_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Neg"
  op: "Neg"
  input: "chain/linear_symplectic_two_by_two/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Neg"
  input: "chain/linear_symplectic_two_by_two/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/RealDiv_1"
  input: "chain/linear_symplectic_two_by_two/s1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/mul"
  op: "Mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Sum_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Reshape_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_69"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two/strided_slice_grad/StridedSliceGrad"
  input: "gradients_1/chain/linear_symplectic_two_by_two/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/AddN_69"
  input: "gradients_1/chain/squeeze_and_shift/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Shape"
  input: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Sum_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/add_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/add_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Reshape"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/Reshape_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_70"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two/truediv_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/concat_grad/mod"
  op: "FloorMod"
  input: "chain/squeeze_and_shift/concat/axis"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/mod"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/concat_grad/Slice"
  op: "Slice"
  input: "gradients_1/chain/squeeze_and_shift/Reshape_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/ConcatOffset"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/chain/squeeze_and_shift/Reshape_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/ConcatOffset:1"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift/concat_grad/Slice"
  input: "^gradients_1/chain/squeeze_and_shift/concat_grad/Slice_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/Slice"
  input: "^gradients_1/chain/squeeze_and_shift/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/Slice_1"
  input: "^gradients_1/chain/squeeze_and_shift/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two/s3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/chain/linear_symplectic_two_by_two/add_grad/tuple/control_dependency_1"
  input: "chain/linear_symplectic_two_by_two/s2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/mul_grad/Mul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/mul_grad/Mul_1"
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/mul_grad/Mul"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/linear_symplectic_two_by_two/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/linear_symplectic_two_by_two/mul_grad/Mul_1"
  input: "^gradients_1/chain/linear_symplectic_two_by_two/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift/mul_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift/mul_grad/Mul"
  input: "gradients_1/chain/squeeze_and_shift/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift/mul_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift/strided_slice"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift/mul_grad/Mul_1"
  input: "gradients_1/chain/squeeze_and_shift/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift/mul_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift/mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/mul_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/tuple/control_dependency_1"
  input: "chain/squeeze_and_shift/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Mul"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift/Exp_1"
  input: "gradients_1/chain/squeeze_and_shift/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Mul_1"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift/mul_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift/mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_71"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/linear_symplectic_two_by_two/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_72"
  op: "AddN"
  input: "gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/linear_symplectic_two_by_two/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/linear_symplectic_two_by_two/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_73"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_grad/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/Exp_grad/mul"
  op: "Mul"
  input: "gradients_1/AddN_73"
  input: "chain/squeeze_and_shift/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_74"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/mul_1_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/Exp_1_grad/mul"
  op: "Mul"
  input: "gradients_1/AddN_74"
  input: "chain/squeeze_and_shift/Exp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift/mul_1_grad/tuple/control_dependency_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/chain/squeeze_and_shift/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/mul_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/chain/squeeze_and_shift/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/Neg_grad/Neg"
  op: "Neg"
  input: "gradients_1/chain/squeeze_and_shift/Exp_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift/add_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/ExpandDims_grad/Reshape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_75"
  op: "AddN"
  input: "gradients_1/chain/squeeze_and_shift/Exp_grad/mul"
  input: "gradients_1/chain/squeeze_and_shift/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/Exp_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift/irrotational_mlp/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift/irrotational_mlp/Softplus_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_1"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift/irrotational_mlp/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_76"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_77"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_1_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_77"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/AddN_77"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift/irrotational_mlp/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1"
  op: "Mul"
  input: "chain/squeeze_and_shift/irrotational_mlp/Mul/ReadVariableOp"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_78"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/tuple/control_dependency"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad"
  op: "SoftplusGrad"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Mul_grad/tuple/control_dependency_1"
  input: "chain/squeeze_and_shift/irrotational_mlp/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_79"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/Softplus_grad/SoftplusGrad_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Shape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_79"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/AddN_79"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Sum_1"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape_1"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/tuple/control_dependency"
  input: "chain/squeeze_and_shift/irrotational_mlp/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "chain/squeeze_and_shift/irrotational_mlp/Reshape"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_1"
  input: "^gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_80"
  op: "AddN"
  input: "gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_81"
  op: "AddN"
  input: "gradients_1/AddN_76"
  input: "gradients_1/AddN_80"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gradients/chain/squeeze_and_shift/irrotational_mlp/MatMul_1_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/W2/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2/Adam/Identity"
  op: "Identity"
  input: "transform/W2/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/W2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/W2/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/W2/Adam"
    }
  }
}
node {
  name: "transform/W2/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/W2/Adam/Assign"
  op: "AssignVariableOp"
  input: "transform/W2/Adam"
  input: "transform/W2/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2/Adam_1/Identity"
  op: "Identity"
  input: "transform/W2/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/W2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/W2/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/W2/Adam_1"
    }
  }
}
node {
  name: "transform/W2/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/W2/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "transform/W2/Adam_1"
  input: "transform/W2/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1/Adam/Identity"
  op: "Identity"
  input: "transform/b1/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b1/Adam"
    }
  }
}
node {
  name: "transform/b1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b1/Adam/Assign"
  op: "AssignVariableOp"
  input: "transform/b1/Adam"
  input: "transform/b1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1/Adam_1/Identity"
  op: "Identity"
  input: "transform/b1/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b1/Adam_1"
    }
  }
}
node {
  name: "transform/b1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "transform/b1/Adam_1"
  input: "transform/b1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2/Adam/Identity"
  op: "Identity"
  input: "transform/b2/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b2/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b2/Adam"
    }
  }
}
node {
  name: "transform/b2/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b2/Adam/Assign"
  op: "AssignVariableOp"
  input: "transform/b2/Adam"
  input: "transform/b2/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2/Adam_1/Identity"
  op: "Identity"
  input: "transform/b2/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b2/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b2/Adam_1"
    }
  }
}
node {
  name: "transform/b2/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b2/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "transform/b2/Adam_1"
  input: "transform/b2/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_1/Adam/Identity"
  op: "Identity"
  input: "transform/W2_1/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/W2_1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/W2_1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/W2_1/Adam"
    }
  }
}
node {
  name: "transform/W2_1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/W2_1/Adam/Assign"
  op: "AssignVariableOp"
  input: "transform/W2_1/Adam"
  input: "transform/W2_1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_1/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_1/Adam_1/Identity"
  op: "Identity"
  input: "transform/W2_1/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/W2_1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/W2_1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/W2_1/Adam_1"
    }
  }
}
node {
  name: "transform/W2_1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/W2_1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "transform/W2_1/Adam_1"
  input: "transform/W2_1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_1/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_1/Adam/Identity"
  op: "Identity"
  input: "transform/b1_1/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b1_1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b1_1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b1_1/Adam"
    }
  }
}
node {
  name: "transform/b1_1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b1_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b1_1/Adam/Assign"
  op: "AssignVariableOp"
  input: "transform/b1_1/Adam"
  input: "transform/b1_1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_1/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_1/Adam_1/Identity"
  op: "Identity"
  input: "transform/b1_1/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b1_1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b1_1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b1_1/Adam_1"
    }
  }
}
node {
  name: "transform/b1_1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b1_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b1_1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "transform/b1_1/Adam_1"
  input: "transform/b1_1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_1/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_1/Adam/Identity"
  op: "Identity"
  input: "transform/b2_1/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b2_1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b2_1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b2_1/Adam"
    }
  }
}
node {
  name: "transform/b2_1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b2_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b2_1/Adam/Assign"
  op: "AssignVariableOp"
  input: "transform/b2_1/Adam"
  input: "transform/b2_1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_1/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_1/Adam_1/Identity"
  op: "Identity"
  input: "transform/b2_1/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b2_1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b2_1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b2_1/Adam_1"
    }
  }
}
node {
  name: "transform/b2_1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b2_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b2_1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "transform/b2_1/Adam_1"
  input: "transform/b2_1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_1/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_2/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_2/Adam/Identity"
  op: "Identity"
  input: "transform/W2_2/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/W2_2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/W2_2/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/W2_2/Adam"
    }
  }
}
node {
  name: "transform/W2_2/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/W2_2/Adam/Assign"
  op: "AssignVariableOp"
  input: "transform/W2_2/Adam"
  input: "transform/W2_2/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_2/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_2/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_2/Adam_1/Identity"
  op: "Identity"
  input: "transform/W2_2/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/W2_2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/W2_2/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/W2_2/Adam_1"
    }
  }
}
node {
  name: "transform/W2_2/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/W2_2/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "transform/W2_2/Adam_1"
  input: "transform/W2_2/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_2/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_2/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_2/Adam/Identity"
  op: "Identity"
  input: "transform/b1_2/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b1_2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b1_2/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b1_2/Adam"
    }
  }
}
node {
  name: "transform/b1_2/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b1_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b1_2/Adam/Assign"
  op: "AssignVariableOp"
  input: "transform/b1_2/Adam"
  input: "transform/b1_2/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_2/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_2/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_2/Adam_1/Identity"
  op: "Identity"
  input: "transform/b1_2/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b1_2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b1_2/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b1_2/Adam_1"
    }
  }
}
node {
  name: "transform/b1_2/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b1_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b1_2/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "transform/b1_2/Adam_1"
  input: "transform/b1_2/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_2/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_2/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_2/Adam/Identity"
  op: "Identity"
  input: "transform/b2_2/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b2_2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b2_2/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b2_2/Adam"
    }
  }
}
node {
  name: "transform/b2_2/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b2_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b2_2/Adam/Assign"
  op: "AssignVariableOp"
  input: "transform/b2_2/Adam"
  input: "transform/b2_2/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_2/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_2/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_2/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_2/Adam_1/Identity"
  op: "Identity"
  input: "transform/b2_2/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b2_2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b2_2/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b2_2/Adam_1"
    }
  }
}
node {
  name: "transform/b2_2/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b2_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b2_2/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "transform/b2_2/Adam_1"
  input: "transform/b2_2/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_2/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_2/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_3/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_3/Adam/Identity"
  op: "Identity"
  input: "transform/W2_3/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/W2_3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/W2_3/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/W2_3/Adam"
    }
  }
}
node {
  name: "transform/W2_3/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2_3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/W2_3/Adam/Assign"
  op: "AssignVariableOp"
  input: "transform/W2_3/Adam"
  input: "transform/W2_3/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_3/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_3/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_3/Adam_1/Identity"
  op: "Identity"
  input: "transform/W2_3/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/W2_3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/W2_3/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/W2_3/Adam_1"
    }
  }
}
node {
  name: "transform/W2_3/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2_3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/W2_3/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "transform/W2_3/Adam_1"
  input: "transform/W2_3/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/W2_3/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/W2_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_3/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_3/Adam/Identity"
  op: "Identity"
  input: "transform/b1_3/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b1_3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b1_3/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b1_3/Adam"
    }
  }
}
node {
  name: "transform/b1_3/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b1_3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b1_3/Adam/Assign"
  op: "AssignVariableOp"
  input: "transform/b1_3/Adam"
  input: "transform/b1_3/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_3/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_3/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_3/Adam_1/Identity"
  op: "Identity"
  input: "transform/b1_3/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b1_3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b1_3/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b1_3/Adam_1"
    }
  }
}
node {
  name: "transform/b1_3/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b1_3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b1_3/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "transform/b1_3/Adam_1"
  input: "transform/b1_3/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b1_3/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b1_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_3/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_3/Adam/Identity"
  op: "Identity"
  input: "transform/b2_3/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b2_3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b2_3/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b2_3/Adam"
    }
  }
}
node {
  name: "transform/b2_3/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b2_3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b2_3/Adam/Assign"
  op: "AssignVariableOp"
  input: "transform/b2_3/Adam"
  input: "transform/b2_3/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_3/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_3/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_3/Adam_1/Identity"
  op: "Identity"
  input: "transform/b2_3/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "transform/b2_3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "transform/b2_3/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "transform/b2_3/Adam_1"
    }
  }
}
node {
  name: "transform/b2_3/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/b2_3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transform/b2_3/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "transform/b2_3/Adam_1"
  input: "transform/b2_3/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transform/b2_3/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transform/b2_3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift/scale/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift/scale/Adam"
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/scale/Adam"
  input: "chain/squeeze_and_shift/scale/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam_1/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift/scale/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift/scale/Adam_1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/scale/Adam_1"
  input: "chain/squeeze_and_shift/scale/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/scale/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Initializer/zeros"
  op: "Fill"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Initializer/zeros/shape_as_tensor"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam"
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam"
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s1/Adam/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s1/Adam"
  input: "chain/linear_symplectic_two_by_two/s1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s1/Adam/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two/s1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s1/Adam_1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s1/Adam_1"
  input: "chain/linear_symplectic_two_by_two/s1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s1/Adam_1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two/s1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s2/Adam/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s2/Adam"
  input: "chain/linear_symplectic_two_by_two/s2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s2/Adam/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two/s2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s2/Adam_1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s2/Adam_1"
  input: "chain/linear_symplectic_two_by_two/s2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s2/Adam_1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two/s2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s3/Adam/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s3/Adam"
  input: "chain/linear_symplectic_two_by_two/s3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s3/Adam/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two/s3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s3/Adam_1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s3/Adam_1"
  input: "chain/linear_symplectic_two_by_two/s3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two/s3/Adam_1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two/s3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_1/scale/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_1/scale/Adam"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/scale/Adam"
  input: "chain/squeeze_and_shift_1/scale/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam_1/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_1/scale/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_1/scale/Adam_1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/scale/Adam_1"
  input: "chain/squeeze_and_shift_1/scale/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/scale/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Initializer/zeros"
  op: "Fill"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Initializer/zeros/shape_as_tensor"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s1/Adam/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s1/Adam/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s1/Adam_1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam_1"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s1/Adam_1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s2/Adam/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s2/Adam/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s2/Adam_1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam_1"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s2/Adam_1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s3/Adam/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s3/Adam/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s3/Adam_1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam_1"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_1/s3/Adam_1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_2/scale/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_2/scale/Adam"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/scale/Adam"
  input: "chain/squeeze_and_shift_2/scale/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam_1/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_2/scale/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_2/scale/Adam_1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/scale/Adam_1"
  input: "chain/squeeze_and_shift_2/scale/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/scale/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Initializer/zeros"
  op: "Fill"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Initializer/zeros/shape_as_tensor"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s1/Adam/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s1/Adam/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s1/Adam_1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam_1"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s1/Adam_1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s2/Adam/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s2/Adam/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s2/Adam_1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam_1"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s2/Adam_1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s3/Adam/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s3/Adam/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s3/Adam_1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam_1"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_2/s3/Adam_1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_3/scale/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_3/scale/Adam"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/scale/Adam"
  input: "chain/squeeze_and_shift_3/scale/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/scale/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam_1/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_3/scale/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_3/scale/Adam_1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/scale/Adam_1"
  input: "chain/squeeze_and_shift_3/scale/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/scale/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/scale/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Initializer/zeros"
  op: "Fill"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Initializer/zeros/shape_as_tensor"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Identity"
  op: "Identity"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1"
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s1/Adam/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s1/Adam/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s1/Adam_1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam_1"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s1/Adam_1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s2/Adam/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s2/Adam/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s2/Adam_1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam_1"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s2/Adam_1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s3/Adam/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s3/Adam/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s3/Adam_1/Assign"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam_1"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "chain/linear_symplectic_two_by_two_3/s3/Adam_1/read"
  op: "Identity"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_transform/W2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_transform/W2/Identity"
  op: "Identity"
  input: "Adam/update_transform/W2/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_transform/W2/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "transform/W2"
  input: "transform/W2/Adam"
  input: "transform/W2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_transform/W2/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_transform/b1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_transform/b1/Identity"
  op: "Identity"
  input: "Adam/update_transform/b1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_transform/b1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "transform/b1"
  input: "transform/b1/Adam"
  input: "transform/b1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_transform/b1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_transform/b2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_transform/b2/Identity"
  op: "Identity"
  input: "Adam/update_transform/b2/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_transform/b2/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "transform/b2"
  input: "transform/b2/Adam"
  input: "transform/b2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_transform/b2/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_transform/W2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_transform/W2_1/Identity"
  op: "Identity"
  input: "Adam/update_transform/W2_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_transform/W2_1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "transform/W2_1"
  input: "transform/W2_1/Adam"
  input: "transform/W2_1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_transform/W2_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_transform/b1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_transform/b1_1/Identity"
  op: "Identity"
  input: "Adam/update_transform/b1_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_transform/b1_1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "transform/b1_1"
  input: "transform/b1_1/Adam"
  input: "transform/b1_1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_transform/b1_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_transform/b2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_transform/b2_1/Identity"
  op: "Identity"
  input: "Adam/update_transform/b2_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_transform/b2_1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "transform/b2_1"
  input: "transform/b2_1/Adam"
  input: "transform/b2_1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_transform/b2_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_transform/W2_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_transform/W2_2/Identity"
  op: "Identity"
  input: "Adam/update_transform/W2_2/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_transform/W2_2/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "transform/W2_2"
  input: "transform/W2_2/Adam"
  input: "transform/W2_2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_transform/W2_2/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_transform/b1_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_transform/b1_2/Identity"
  op: "Identity"
  input: "Adam/update_transform/b1_2/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_transform/b1_2/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "transform/b1_2"
  input: "transform/b1_2/Adam"
  input: "transform/b1_2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_transform/b1_2/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_transform/b2_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_transform/b2_2/Identity"
  op: "Identity"
  input: "Adam/update_transform/b2_2/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_transform/b2_2/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "transform/b2_2"
  input: "transform/b2_2/Adam"
  input: "transform/b2_2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_transform/b2_2/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_transform/W2_3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/W2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_transform/W2_3/Identity"
  op: "Identity"
  input: "Adam/update_transform/W2_3/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_transform/W2_3/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "transform/W2_3"
  input: "transform/W2_3/Adam"
  input: "transform/W2_3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_transform/W2_3/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_transform/b1_3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b1_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_transform/b1_3/Identity"
  op: "Identity"
  input: "Adam/update_transform/b1_3/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_transform/b1_3/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "transform/b1_3"
  input: "transform/b1_3/Adam"
  input: "transform/b1_3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_transform/b1_3/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_transform/b2_3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "transform/b2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_transform/b2_3/Identity"
  op: "Identity"
  input: "Adam/update_transform/b2_3/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_transform/b2_3/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "transform/b2_3"
  input: "transform/b2_3/Adam"
  input: "transform/b2_3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_transform/b2_3/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift/scale/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift/scale/Identity"
  op: "Identity"
  input: "Adam/update_chain/squeeze_and_shift/scale/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift/scale/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "chain/squeeze_and_shift/scale"
  input: "chain/squeeze_and_shift/scale/Adam"
  input: "chain/squeeze_and_shift/scale/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_chain/squeeze_and_shift/scale/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift/irrotational_mlp/W1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift/irrotational_mlp/W1/Identity"
  op: "Identity"
  input: "Adam/update_chain/squeeze_and_shift/irrotational_mlp/W1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift/irrotational_mlp/W1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_chain/squeeze_and_shift/irrotational_mlp/W1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift/irrotational_mlp/b3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift/irrotational_mlp/b3/Identity"
  op: "Identity"
  input: "Adam/update_chain/squeeze_and_shift/irrotational_mlp/b3/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift/irrotational_mlp/b3/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/chain/squeeze_and_shift/irrotational_mlp/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_chain/squeeze_and_shift/irrotational_mlp/b3/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/linear_symplectic_two_by_two/s1/ApplyAdam"
  op: "ApplyAdam"
  input: "chain/linear_symplectic_two_by_two/s1"
  input: "chain/linear_symplectic_two_by_two/s1/Adam"
  input: "chain/linear_symplectic_two_by_two/s1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/linear_symplectic_two_by_two/s2/ApplyAdam"
  op: "ApplyAdam"
  input: "chain/linear_symplectic_two_by_two/s2"
  input: "chain/linear_symplectic_two_by_two/s2/Adam"
  input: "chain/linear_symplectic_two_by_two/s2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/linear_symplectic_two_by_two/s3/ApplyAdam"
  op: "ApplyAdam"
  input: "chain/linear_symplectic_two_by_two/s3"
  input: "chain/linear_symplectic_two_by_two/s3/Adam"
  input: "chain/linear_symplectic_two_by_two/s3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_1/scale/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_1/scale/Identity"
  op: "Identity"
  input: "Adam/update_chain/squeeze_and_shift_1/scale/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_1/scale/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "chain/squeeze_and_shift_1/scale"
  input: "chain/squeeze_and_shift_1/scale/Adam"
  input: "chain/squeeze_and_shift_1/scale/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_chain/squeeze_and_shift_1/scale/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Identity"
  op: "Identity"
  input: "Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/W1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Identity"
  op: "Identity"
  input: "Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/b3/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/chain/squeeze_and_shift_1/irrotational_mlp_1/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/linear_symplectic_two_by_two_1/s1/ApplyAdam"
  op: "ApplyAdam"
  input: "chain/linear_symplectic_two_by_two_1/s1"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/linear_symplectic_two_by_two_1/s2/ApplyAdam"
  op: "ApplyAdam"
  input: "chain/linear_symplectic_two_by_two_1/s2"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/linear_symplectic_two_by_two_1/s3/ApplyAdam"
  op: "ApplyAdam"
  input: "chain/linear_symplectic_two_by_two_1/s3"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_2/scale/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_2/scale/Identity"
  op: "Identity"
  input: "Adam/update_chain/squeeze_and_shift_2/scale/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_2/scale/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "chain/squeeze_and_shift_2/scale"
  input: "chain/squeeze_and_shift_2/scale/Adam"
  input: "chain/squeeze_and_shift_2/scale/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_chain/squeeze_and_shift_2/scale/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Identity"
  op: "Identity"
  input: "Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/W1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Identity"
  op: "Identity"
  input: "Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/b3/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/chain/squeeze_and_shift_2/irrotational_mlp_2/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/linear_symplectic_two_by_two_2/s1/ApplyAdam"
  op: "ApplyAdam"
  input: "chain/linear_symplectic_two_by_two_2/s1"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/linear_symplectic_two_by_two_2/s2/ApplyAdam"
  op: "ApplyAdam"
  input: "chain/linear_symplectic_two_by_two_2/s2"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/linear_symplectic_two_by_two_2/s3/ApplyAdam"
  op: "ApplyAdam"
  input: "chain/linear_symplectic_two_by_two_2/s3"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_3/scale/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_3/scale/Identity"
  op: "Identity"
  input: "Adam/update_chain/squeeze_and_shift_3/scale/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_3/scale/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "chain/squeeze_and_shift_3/scale"
  input: "chain/squeeze_and_shift_3/scale/Adam"
  input: "chain/squeeze_and_shift_3/scale/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_chain/squeeze_and_shift_3/scale/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Identity"
  op: "Identity"
  input: "Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/W1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Identity"
  op: "Identity"
  input: "Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/b3/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/chain/squeeze_and_shift_3/irrotational_mlp_3/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/linear_symplectic_two_by_two_3/s1/ApplyAdam"
  op: "ApplyAdam"
  input: "chain/linear_symplectic_two_by_two_3/s1"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/linear_symplectic_two_by_two_3/s2/ApplyAdam"
  op: "ApplyAdam"
  input: "chain/linear_symplectic_two_by_two_3/s2"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_chain/linear_symplectic_two_by_two_3/s3/ApplyAdam"
  op: "ApplyAdam"
  input: "chain/linear_symplectic_two_by_two_3/s3"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_chain/linear_symplectic_two_by_two/s1/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two/s2/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two/s3/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_1/s1/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_1/s2/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_1/s3/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_2/s1/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_2/s2/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_2/s3/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_3/s1/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_3/s2/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_3/s3/ApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift/irrotational_mlp/W1/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift/irrotational_mlp/b3/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift/scale/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/W1/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/b3/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_1/scale/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/W1/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/b3/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_2/scale/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/W1/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/b3/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_3/scale/ResourceApplyAdam"
  input: "^Adam/update_transform/W2/ResourceApplyAdam"
  input: "^Adam/update_transform/W2_1/ResourceApplyAdam"
  input: "^Adam/update_transform/W2_2/ResourceApplyAdam"
  input: "^Adam/update_transform/W2_3/ResourceApplyAdam"
  input: "^Adam/update_transform/b1/ResourceApplyAdam"
  input: "^Adam/update_transform/b1_1/ResourceApplyAdam"
  input: "^Adam/update_transform/b1_2/ResourceApplyAdam"
  input: "^Adam/update_transform/b1_3/ResourceApplyAdam"
  input: "^Adam/update_transform/b2/ResourceApplyAdam"
  input: "^Adam/update_transform/b2_1/ResourceApplyAdam"
  input: "^Adam/update_transform/b2_2/ResourceApplyAdam"
  input: "^Adam/update_transform/b2_3/ResourceApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_chain/linear_symplectic_two_by_two/s1/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two/s2/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two/s3/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_1/s1/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_1/s2/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_1/s3/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_2/s1/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_2/s2/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_2/s3/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_3/s1/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_3/s2/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_3/s3/ApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift/irrotational_mlp/W1/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift/irrotational_mlp/b3/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift/scale/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/W1/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/b3/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_1/scale/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/W1/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/b3/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_2/scale/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/W1/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/b3/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_3/scale/ResourceApplyAdam"
  input: "^Adam/update_transform/W2/ResourceApplyAdam"
  input: "^Adam/update_transform/W2_1/ResourceApplyAdam"
  input: "^Adam/update_transform/W2_2/ResourceApplyAdam"
  input: "^Adam/update_transform/W2_3/ResourceApplyAdam"
  input: "^Adam/update_transform/b1/ResourceApplyAdam"
  input: "^Adam/update_transform/b1_1/ResourceApplyAdam"
  input: "^Adam/update_transform/b1_2/ResourceApplyAdam"
  input: "^Adam/update_transform/b1_3/ResourceApplyAdam"
  input: "^Adam/update_transform/b2/ResourceApplyAdam"
  input: "^Adam/update_transform/b2_1/ResourceApplyAdam"
  input: "^Adam/update_transform/b2_2/ResourceApplyAdam"
  input: "^Adam/update_transform/b2_3/ResourceApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
  input: "^Adam/update_chain/linear_symplectic_two_by_two/s1/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two/s2/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two/s3/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_1/s1/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_1/s2/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_1/s3/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_2/s1/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_2/s2/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_2/s3/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_3/s1/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_3/s2/ApplyAdam"
  input: "^Adam/update_chain/linear_symplectic_two_by_two_3/s3/ApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift/irrotational_mlp/W1/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift/irrotational_mlp/b3/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift/scale/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/W1/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_1/irrotational_mlp_1/b3/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_1/scale/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/W1/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_2/irrotational_mlp_2/b3/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_2/scale/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/W1/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_3/irrotational_mlp_3/b3/ResourceApplyAdam"
  input: "^Adam/update_chain/squeeze_and_shift_3/scale/ResourceApplyAdam"
  input: "^Adam/update_transform/W2/ResourceApplyAdam"
  input: "^Adam/update_transform/W2_1/ResourceApplyAdam"
  input: "^Adam/update_transform/W2_2/ResourceApplyAdam"
  input: "^Adam/update_transform/W2_3/ResourceApplyAdam"
  input: "^Adam/update_transform/b1/ResourceApplyAdam"
  input: "^Adam/update_transform/b1_1/ResourceApplyAdam"
  input: "^Adam/update_transform/b1_2/ResourceApplyAdam"
  input: "^Adam/update_transform/b1_3/ResourceApplyAdam"
  input: "^Adam/update_transform/b2/ResourceApplyAdam"
  input: "^Adam/update_transform/b2_1/ResourceApplyAdam"
  input: "^Adam/update_transform/b2_2/ResourceApplyAdam"
  input: "^Adam/update_transform/b2_3/ResourceApplyAdam"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "loss/Mean"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss_function/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_function"
      }
    }
  }
}
node {
  name: "loss_function"
  op: "ScalarSummary"
  input: "loss_function/tags"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^chain/linear_symplectic_two_by_two/s1/Adam/Assign"
  input: "^chain/linear_symplectic_two_by_two/s1/Adam_1/Assign"
  input: "^chain/linear_symplectic_two_by_two/s1/Assign"
  input: "^chain/linear_symplectic_two_by_two/s2/Adam/Assign"
  input: "^chain/linear_symplectic_two_by_two/s2/Adam_1/Assign"
  input: "^chain/linear_symplectic_two_by_two/s2/Assign"
  input: "^chain/linear_symplectic_two_by_two/s3/Adam/Assign"
  input: "^chain/linear_symplectic_two_by_two/s3/Adam_1/Assign"
  input: "^chain/linear_symplectic_two_by_two/s3/Assign"
  input: "^chain/linear_symplectic_two_by_two_1/s1/Adam/Assign"
  input: "^chain/linear_symplectic_two_by_two_1/s1/Adam_1/Assign"
  input: "^chain/linear_symplectic_two_by_two_1/s1/Assign"
  input: "^chain/linear_symplectic_two_by_two_1/s2/Adam/Assign"
  input: "^chain/linear_symplectic_two_by_two_1/s2/Adam_1/Assign"
  input: "^chain/linear_symplectic_two_by_two_1/s2/Assign"
  input: "^chain/linear_symplectic_two_by_two_1/s3/Adam/Assign"
  input: "^chain/linear_symplectic_two_by_two_1/s3/Adam_1/Assign"
  input: "^chain/linear_symplectic_two_by_two_1/s3/Assign"
  input: "^chain/linear_symplectic_two_by_two_2/s1/Adam/Assign"
  input: "^chain/linear_symplectic_two_by_two_2/s1/Adam_1/Assign"
  input: "^chain/linear_symplectic_two_by_two_2/s1/Assign"
  input: "^chain/linear_symplectic_two_by_two_2/s2/Adam/Assign"
  input: "^chain/linear_symplectic_two_by_two_2/s2/Adam_1/Assign"
  input: "^chain/linear_symplectic_two_by_two_2/s2/Assign"
  input: "^chain/linear_symplectic_two_by_two_2/s3/Adam/Assign"
  input: "^chain/linear_symplectic_two_by_two_2/s3/Adam_1/Assign"
  input: "^chain/linear_symplectic_two_by_two_2/s3/Assign"
  input: "^chain/linear_symplectic_two_by_two_3/s1/Adam/Assign"
  input: "^chain/linear_symplectic_two_by_two_3/s1/Adam_1/Assign"
  input: "^chain/linear_symplectic_two_by_two_3/s1/Assign"
  input: "^chain/linear_symplectic_two_by_two_3/s2/Adam/Assign"
  input: "^chain/linear_symplectic_two_by_two_3/s2/Adam_1/Assign"
  input: "^chain/linear_symplectic_two_by_two_3/s2/Assign"
  input: "^chain/linear_symplectic_two_by_two_3/s3/Adam/Assign"
  input: "^chain/linear_symplectic_two_by_two_3/s3/Adam_1/Assign"
  input: "^chain/linear_symplectic_two_by_two_3/s3/Assign"
  input: "^chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Assign"
  input: "^chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Assign"
  input: "^chain/squeeze_and_shift/irrotational_mlp/W1/Assign"
  input: "^chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Assign"
  input: "^chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Assign"
  input: "^chain/squeeze_and_shift/irrotational_mlp/b3/Assign"
  input: "^chain/squeeze_and_shift/scale/Adam/Assign"
  input: "^chain/squeeze_and_shift/scale/Adam_1/Assign"
  input: "^chain/squeeze_and_shift/scale/Assign"
  input: "^chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Assign"
  input: "^chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Assign"
  input: "^chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Assign"
  input: "^chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Assign"
  input: "^chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Assign"
  input: "^chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Assign"
  input: "^chain/squeeze_and_shift_1/scale/Adam/Assign"
  input: "^chain/squeeze_and_shift_1/scale/Adam_1/Assign"
  input: "^chain/squeeze_and_shift_1/scale/Assign"
  input: "^chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Assign"
  input: "^chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Assign"
  input: "^chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Assign"
  input: "^chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Assign"
  input: "^chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Assign"
  input: "^chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Assign"
  input: "^chain/squeeze_and_shift_2/scale/Adam/Assign"
  input: "^chain/squeeze_and_shift_2/scale/Adam_1/Assign"
  input: "^chain/squeeze_and_shift_2/scale/Assign"
  input: "^chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Assign"
  input: "^chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Assign"
  input: "^chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Assign"
  input: "^chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Assign"
  input: "^chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Assign"
  input: "^chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Assign"
  input: "^chain/squeeze_and_shift_3/scale/Adam/Assign"
  input: "^chain/squeeze_and_shift_3/scale/Adam_1/Assign"
  input: "^chain/squeeze_and_shift_3/scale/Assign"
  input: "^global_step/Assign"
  input: "^transform/W2/Adam/Assign"
  input: "^transform/W2/Adam_1/Assign"
  input: "^transform/W2/Assign"
  input: "^transform/W2_1/Adam/Assign"
  input: "^transform/W2_1/Adam_1/Assign"
  input: "^transform/W2_1/Assign"
  input: "^transform/W2_2/Adam/Assign"
  input: "^transform/W2_2/Adam_1/Assign"
  input: "^transform/W2_2/Assign"
  input: "^transform/W2_3/Adam/Assign"
  input: "^transform/W2_3/Adam_1/Assign"
  input: "^transform/W2_3/Assign"
  input: "^transform/b1/Adam/Assign"
  input: "^transform/b1/Adam_1/Assign"
  input: "^transform/b1/Assign"
  input: "^transform/b1_1/Adam/Assign"
  input: "^transform/b1_1/Adam_1/Assign"
  input: "^transform/b1_1/Assign"
  input: "^transform/b1_2/Adam/Assign"
  input: "^transform/b1_2/Adam_1/Assign"
  input: "^transform/b1_2/Assign"
  input: "^transform/b1_3/Adam/Assign"
  input: "^transform/b1_3/Adam_1/Assign"
  input: "^transform/b1_3/Assign"
  input: "^transform/b2/Adam/Assign"
  input: "^transform/b2/Adam_1/Assign"
  input: "^transform/b2/Assign"
  input: "^transform/b2_1/Adam/Assign"
  input: "^transform/b2_1/Adam_1/Assign"
  input: "^transform/b2_1/Assign"
  input: "^transform/b2_2/Adam/Assign"
  input: "^transform/b2_2/Adam_1/Assign"
  input: "^transform/b2_2/Assign"
  input: "^transform/b2_3/Adam/Assign"
  input: "^transform/b2_3/Adam_1/Assign"
  input: "^transform/b2_3/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "transform/b1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "transform/b2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "transform/W2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "transform/b1_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "transform/b2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "transform/W2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "transform/b1_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "transform/b2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "transform/W2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "transform/b1_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "transform/b2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "transform/W2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "transform/W2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "transform/b1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "transform/b1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "transform/b2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "transform/b2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "transform/W2_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "transform/W2_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "transform/b1_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "transform/b1_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "transform/b2_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "transform/b2_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "transform/W2_2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "transform/W2_2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "transform/b1_2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "transform/b1_2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "transform/b2_2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "transform/b2_2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "transform/W2_3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "transform/W2_3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "transform/b1_3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "transform/b1_3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "transform/b2_3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "transform/b2_3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/scale/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/scale/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/scale/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/scale/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/scale/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/scale/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/scale/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/scale/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  input: "report_uninitialized_variables/VarIsInitializedOp_31"
  input: "report_uninitialized_variables/VarIsInitializedOp_32"
  input: "report_uninitialized_variables/VarIsInitializedOp_33"
  input: "report_uninitialized_variables/VarIsInitializedOp_34"
  input: "report_uninitialized_variables/VarIsInitializedOp_35"
  input: "report_uninitialized_variables/VarIsInitializedOp_36"
  input: "report_uninitialized_variables/VarIsInitializedOp_37"
  input: "report_uninitialized_variables/VarIsInitializedOp_38"
  input: "report_uninitialized_variables/VarIsInitializedOp_39"
  input: "report_uninitialized_variables/VarIsInitializedOp_40"
  input: "report_uninitialized_variables/VarIsInitializedOp_41"
  input: "report_uninitialized_variables/VarIsInitializedOp_42"
  input: "report_uninitialized_variables/VarIsInitializedOp_43"
  input: "report_uninitialized_variables/VarIsInitializedOp_44"
  input: "report_uninitialized_variables/VarIsInitializedOp_45"
  input: "report_uninitialized_variables/VarIsInitializedOp_46"
  input: "report_uninitialized_variables/VarIsInitializedOp_47"
  input: "report_uninitialized_variables/VarIsInitializedOp_48"
  input: "report_uninitialized_variables/VarIsInitializedOp_49"
  input: "report_uninitialized_variables/VarIsInitializedOp_50"
  input: "report_uninitialized_variables/VarIsInitializedOp_51"
  input: "report_uninitialized_variables/VarIsInitializedOp_52"
  input: "report_uninitialized_variables/VarIsInitializedOp_53"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_54"
  input: "report_uninitialized_variables/VarIsInitializedOp_55"
  input: "report_uninitialized_variables/VarIsInitializedOp_56"
  input: "report_uninitialized_variables/VarIsInitializedOp_57"
  input: "report_uninitialized_variables/VarIsInitializedOp_58"
  input: "report_uninitialized_variables/VarIsInitializedOp_59"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_60"
  input: "report_uninitialized_variables/VarIsInitializedOp_61"
  input: "report_uninitialized_variables/VarIsInitializedOp_62"
  input: "report_uninitialized_variables/VarIsInitializedOp_63"
  input: "report_uninitialized_variables/VarIsInitializedOp_64"
  input: "report_uninitialized_variables/VarIsInitializedOp_65"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/VarIsInitializedOp_66"
  input: "report_uninitialized_variables/VarIsInitializedOp_67"
  input: "report_uninitialized_variables/VarIsInitializedOp_68"
  input: "report_uninitialized_variables/VarIsInitializedOp_69"
  input: "report_uninitialized_variables/VarIsInitializedOp_70"
  input: "report_uninitialized_variables/VarIsInitializedOp_71"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 111
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 111
          }
        }
        string_val: "transform/W2"
        string_val: "transform/b1"
        string_val: "transform/b2"
        string_val: "transform/W2_1"
        string_val: "transform/b1_1"
        string_val: "transform/b2_1"
        string_val: "transform/W2_2"
        string_val: "transform/b1_2"
        string_val: "transform/b2_2"
        string_val: "transform/W2_3"
        string_val: "transform/b1_3"
        string_val: "transform/b2_3"
        string_val: "chain/squeeze_and_shift/scale"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/W1"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/b3"
        string_val: "chain/linear_symplectic_two_by_two/s1"
        string_val: "chain/linear_symplectic_two_by_two/s2"
        string_val: "chain/linear_symplectic_two_by_two/s3"
        string_val: "chain/squeeze_and_shift_1/scale"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
        string_val: "chain/linear_symplectic_two_by_two_1/s1"
        string_val: "chain/linear_symplectic_two_by_two_1/s2"
        string_val: "chain/linear_symplectic_two_by_two_1/s3"
        string_val: "chain/squeeze_and_shift_2/scale"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
        string_val: "chain/linear_symplectic_two_by_two_2/s1"
        string_val: "chain/linear_symplectic_two_by_two_2/s2"
        string_val: "chain/linear_symplectic_two_by_two_2/s3"
        string_val: "chain/squeeze_and_shift_3/scale"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
        string_val: "chain/linear_symplectic_two_by_two_3/s1"
        string_val: "chain/linear_symplectic_two_by_two_3/s2"
        string_val: "chain/linear_symplectic_two_by_two_3/s3"
        string_val: "global_step"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "transform/W2/Adam"
        string_val: "transform/W2/Adam_1"
        string_val: "transform/b1/Adam"
        string_val: "transform/b1/Adam_1"
        string_val: "transform/b2/Adam"
        string_val: "transform/b2/Adam_1"
        string_val: "transform/W2_1/Adam"
        string_val: "transform/W2_1/Adam_1"
        string_val: "transform/b1_1/Adam"
        string_val: "transform/b1_1/Adam_1"
        string_val: "transform/b2_1/Adam"
        string_val: "transform/b2_1/Adam_1"
        string_val: "transform/W2_2/Adam"
        string_val: "transform/W2_2/Adam_1"
        string_val: "transform/b1_2/Adam"
        string_val: "transform/b1_2/Adam_1"
        string_val: "transform/b2_2/Adam"
        string_val: "transform/b2_2/Adam_1"
        string_val: "transform/W2_3/Adam"
        string_val: "transform/W2_3/Adam_1"
        string_val: "transform/b1_3/Adam"
        string_val: "transform/b1_3/Adam_1"
        string_val: "transform/b2_3/Adam"
        string_val: "transform/b2_3/Adam_1"
        string_val: "chain/squeeze_and_shift/scale/Adam"
        string_val: "chain/squeeze_and_shift/scale/Adam_1"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two/s3/Adam_1"
        string_val: "chain/squeeze_and_shift_1/scale/Adam"
        string_val: "chain/squeeze_and_shift_1/scale/Adam_1"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_1/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two_1/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_1/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two_1/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_1/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two_1/s3/Adam_1"
        string_val: "chain/squeeze_and_shift_2/scale/Adam"
        string_val: "chain/squeeze_and_shift_2/scale/Adam_1"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_2/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two_2/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_2/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two_2/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_2/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two_2/s3/Adam_1"
        string_val: "chain/squeeze_and_shift_3/scale/Adam"
        string_val: "chain/squeeze_and_shift_3/scale/Adam_1"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_3/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two_3/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_3/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two_3/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_3/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two_3/s3/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 111
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 111
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 111
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "transform/W2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "transform/b1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "transform/b2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "transform/W2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "transform/b1_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "transform/b2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "transform/W2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "transform/b1_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "transform/b2_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "transform/W2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "transform/b1_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "transform/b2_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/scale"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "transform/W2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "transform/W2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "transform/b1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "transform/b1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "transform/b2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "transform/b2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "transform/W2_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "transform/W2_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "transform/b1_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "transform/b1_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "transform/b2_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "transform/b2_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "transform/W2_2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "transform/W2_2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "transform/b1_2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "transform/b1_2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "transform/b2_2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "transform/b2_2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "transform/W2_3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "transform/W2_3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "transform/b1_3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "transform/b1_3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "transform/b2_3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "transform/b2_3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/scale/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/scale/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two/s3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/scale/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/scale/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/scale/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/scale/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/scale/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/scale/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_36"
  input: "report_uninitialized_variables_1/IsVariableInitialized_37"
  input: "report_uninitialized_variables_1/IsVariableInitialized_38"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 111
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 111
          }
        }
        string_val: "transform/W2"
        string_val: "transform/b1"
        string_val: "transform/b2"
        string_val: "transform/W2_1"
        string_val: "transform/b1_1"
        string_val: "transform/b2_1"
        string_val: "transform/W2_2"
        string_val: "transform/b1_2"
        string_val: "transform/b2_2"
        string_val: "transform/W2_3"
        string_val: "transform/b1_3"
        string_val: "transform/b2_3"
        string_val: "chain/squeeze_and_shift/scale"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/W1"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/b3"
        string_val: "chain/linear_symplectic_two_by_two/s1"
        string_val: "chain/linear_symplectic_two_by_two/s2"
        string_val: "chain/linear_symplectic_two_by_two/s3"
        string_val: "chain/squeeze_and_shift_1/scale"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
        string_val: "chain/linear_symplectic_two_by_two_1/s1"
        string_val: "chain/linear_symplectic_two_by_two_1/s2"
        string_val: "chain/linear_symplectic_two_by_two_1/s3"
        string_val: "chain/squeeze_and_shift_2/scale"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
        string_val: "chain/linear_symplectic_two_by_two_2/s1"
        string_val: "chain/linear_symplectic_two_by_two_2/s2"
        string_val: "chain/linear_symplectic_two_by_two_2/s3"
        string_val: "chain/squeeze_and_shift_3/scale"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
        string_val: "chain/linear_symplectic_two_by_two_3/s1"
        string_val: "chain/linear_symplectic_two_by_two_3/s2"
        string_val: "chain/linear_symplectic_two_by_two_3/s3"
        string_val: "global_step"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "transform/W2/Adam"
        string_val: "transform/W2/Adam_1"
        string_val: "transform/b1/Adam"
        string_val: "transform/b1/Adam_1"
        string_val: "transform/b2/Adam"
        string_val: "transform/b2/Adam_1"
        string_val: "transform/W2_1/Adam"
        string_val: "transform/W2_1/Adam_1"
        string_val: "transform/b1_1/Adam"
        string_val: "transform/b1_1/Adam_1"
        string_val: "transform/b2_1/Adam"
        string_val: "transform/b2_1/Adam_1"
        string_val: "transform/W2_2/Adam"
        string_val: "transform/W2_2/Adam_1"
        string_val: "transform/b1_2/Adam"
        string_val: "transform/b1_2/Adam_1"
        string_val: "transform/b2_2/Adam"
        string_val: "transform/b2_2/Adam_1"
        string_val: "transform/W2_3/Adam"
        string_val: "transform/W2_3/Adam_1"
        string_val: "transform/b1_3/Adam"
        string_val: "transform/b1_3/Adam_1"
        string_val: "transform/b2_3/Adam"
        string_val: "transform/b2_3/Adam_1"
        string_val: "chain/squeeze_and_shift/scale/Adam"
        string_val: "chain/squeeze_and_shift/scale/Adam_1"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two/s3/Adam_1"
        string_val: "chain/squeeze_and_shift_1/scale/Adam"
        string_val: "chain/squeeze_and_shift_1/scale/Adam_1"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_1/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two_1/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_1/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two_1/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_1/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two_1/s3/Adam_1"
        string_val: "chain/squeeze_and_shift_2/scale/Adam"
        string_val: "chain/squeeze_and_shift_2/scale/Adam_1"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_2/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two_2/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_2/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two_2/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_2/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two_2/s3/Adam_1"
        string_val: "chain/squeeze_and_shift_3/scale/Adam"
        string_val: "chain/squeeze_and_shift_3/scale/Adam_1"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_3/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two_3/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_3/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two_3/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_3/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two_3/s3/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 111
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 111
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 111
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss_function"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_3b03854ea3a74fd19ad8b9d8bde896d9/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 111
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "chain/linear_symplectic_two_by_two/s1"
        string_val: "chain/linear_symplectic_two_by_two/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two/s2"
        string_val: "chain/linear_symplectic_two_by_two/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two/s3"
        string_val: "chain/linear_symplectic_two_by_two/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two/s3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_1/s1"
        string_val: "chain/linear_symplectic_two_by_two_1/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two_1/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_1/s2"
        string_val: "chain/linear_symplectic_two_by_two_1/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two_1/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_1/s3"
        string_val: "chain/linear_symplectic_two_by_two_1/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two_1/s3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_2/s1"
        string_val: "chain/linear_symplectic_two_by_two_2/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two_2/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_2/s2"
        string_val: "chain/linear_symplectic_two_by_two_2/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two_2/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_2/s3"
        string_val: "chain/linear_symplectic_two_by_two_2/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two_2/s3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_3/s1"
        string_val: "chain/linear_symplectic_two_by_two_3/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two_3/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_3/s2"
        string_val: "chain/linear_symplectic_two_by_two_3/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two_3/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_3/s3"
        string_val: "chain/linear_symplectic_two_by_two_3/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two_3/s3/Adam_1"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/W1"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/b3"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1"
        string_val: "chain/squeeze_and_shift/scale"
        string_val: "chain/squeeze_and_shift/scale/Adam"
        string_val: "chain/squeeze_and_shift/scale/Adam_1"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1"
        string_val: "chain/squeeze_and_shift_1/scale"
        string_val: "chain/squeeze_and_shift_1/scale/Adam"
        string_val: "chain/squeeze_and_shift_1/scale/Adam_1"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1"
        string_val: "chain/squeeze_and_shift_2/scale"
        string_val: "chain/squeeze_and_shift_2/scale/Adam"
        string_val: "chain/squeeze_and_shift_2/scale/Adam_1"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1"
        string_val: "chain/squeeze_and_shift_3/scale"
        string_val: "chain/squeeze_and_shift_3/scale/Adam"
        string_val: "chain/squeeze_and_shift_3/scale/Adam_1"
        string_val: "global_step"
        string_val: "transform/W2"
        string_val: "transform/W2/Adam"
        string_val: "transform/W2/Adam_1"
        string_val: "transform/W2_1"
        string_val: "transform/W2_1/Adam"
        string_val: "transform/W2_1/Adam_1"
        string_val: "transform/W2_2"
        string_val: "transform/W2_2/Adam"
        string_val: "transform/W2_2/Adam_1"
        string_val: "transform/W2_3"
        string_val: "transform/W2_3/Adam"
        string_val: "transform/W2_3/Adam_1"
        string_val: "transform/b1"
        string_val: "transform/b1/Adam"
        string_val: "transform/b1/Adam_1"
        string_val: "transform/b1_1"
        string_val: "transform/b1_1/Adam"
        string_val: "transform/b1_1/Adam_1"
        string_val: "transform/b1_2"
        string_val: "transform/b1_2/Adam"
        string_val: "transform/b1_2/Adam_1"
        string_val: "transform/b1_3"
        string_val: "transform/b1_3/Adam"
        string_val: "transform/b1_3/Adam_1"
        string_val: "transform/b2"
        string_val: "transform/b2/Adam"
        string_val: "transform/b2/Adam_1"
        string_val: "transform/b2_1"
        string_val: "transform/b2_1/Adam"
        string_val: "transform/b2_1/Adam_1"
        string_val: "transform/b2_2"
        string_val: "transform/b2_2/Adam"
        string_val: "transform/b2_2/Adam_1"
        string_val: "transform/b2_3"
        string_val: "transform/b2_3/Adam"
        string_val: "transform/b2_3/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 111
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "chain/linear_symplectic_two_by_two/s1"
  input: "chain/linear_symplectic_two_by_two/s1/Adam"
  input: "chain/linear_symplectic_two_by_two/s1/Adam_1"
  input: "chain/linear_symplectic_two_by_two/s2"
  input: "chain/linear_symplectic_two_by_two/s2/Adam"
  input: "chain/linear_symplectic_two_by_two/s2/Adam_1"
  input: "chain/linear_symplectic_two_by_two/s3"
  input: "chain/linear_symplectic_two_by_two/s3/Adam"
  input: "chain/linear_symplectic_two_by_two/s3/Adam_1"
  input: "chain/linear_symplectic_two_by_two_1/s1"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam_1"
  input: "chain/linear_symplectic_two_by_two_1/s2"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam_1"
  input: "chain/linear_symplectic_two_by_two_1/s3"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam_1"
  input: "chain/linear_symplectic_two_by_two_2/s1"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam_1"
  input: "chain/linear_symplectic_two_by_two_2/s2"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam_1"
  input: "chain/linear_symplectic_two_by_two_2/s3"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam_1"
  input: "chain/linear_symplectic_two_by_two_3/s1"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam_1"
  input: "chain/linear_symplectic_two_by_two_3/s2"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam_1"
  input: "chain/linear_symplectic_two_by_two_3/s3"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam_1"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Read/ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Read/ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift/scale/Read/ReadVariableOp"
  input: "chain/squeeze_and_shift/scale/Adam/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift/scale/Adam_1/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Read/ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Read/ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_1/scale/Read/ReadVariableOp"
  input: "chain/squeeze_and_shift_1/scale/Adam/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_1/scale/Adam_1/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Read/ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Read/ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_2/scale/Read/ReadVariableOp"
  input: "chain/squeeze_and_shift_2/scale/Adam/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_2/scale/Adam_1/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Read/ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Read/ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_3/scale/Read/ReadVariableOp"
  input: "chain/squeeze_and_shift_3/scale/Adam/Read_1/ReadVariableOp"
  input: "chain/squeeze_and_shift_3/scale/Adam_1/Read_1/ReadVariableOp"
  input: "global_step"
  input: "transform/W2/Read/ReadVariableOp"
  input: "transform/W2/Adam/Read_1/ReadVariableOp"
  input: "transform/W2/Adam_1/Read_1/ReadVariableOp"
  input: "transform/W2_1/Read/ReadVariableOp"
  input: "transform/W2_1/Adam/Read_1/ReadVariableOp"
  input: "transform/W2_1/Adam_1/Read_1/ReadVariableOp"
  input: "transform/W2_2/Read/ReadVariableOp"
  input: "transform/W2_2/Adam/Read_1/ReadVariableOp"
  input: "transform/W2_2/Adam_1/Read_1/ReadVariableOp"
  input: "transform/W2_3/Read/ReadVariableOp"
  input: "transform/W2_3/Adam/Read_1/ReadVariableOp"
  input: "transform/W2_3/Adam_1/Read_1/ReadVariableOp"
  input: "transform/b1/Read/ReadVariableOp"
  input: "transform/b1/Adam/Read_1/ReadVariableOp"
  input: "transform/b1/Adam_1/Read_1/ReadVariableOp"
  input: "transform/b1_1/Read/ReadVariableOp"
  input: "transform/b1_1/Adam/Read_1/ReadVariableOp"
  input: "transform/b1_1/Adam_1/Read_1/ReadVariableOp"
  input: "transform/b1_2/Read/ReadVariableOp"
  input: "transform/b1_2/Adam/Read_1/ReadVariableOp"
  input: "transform/b1_2/Adam_1/Read_1/ReadVariableOp"
  input: "transform/b1_3/Read/ReadVariableOp"
  input: "transform/b1_3/Adam/Read_1/ReadVariableOp"
  input: "transform/b1_3/Adam_1/Read_1/ReadVariableOp"
  input: "transform/b2/Read/ReadVariableOp"
  input: "transform/b2/Adam/Read_1/ReadVariableOp"
  input: "transform/b2/Adam_1/Read_1/ReadVariableOp"
  input: "transform/b2_1/Read/ReadVariableOp"
  input: "transform/b2_1/Adam/Read_1/ReadVariableOp"
  input: "transform/b2_1/Adam_1/Read_1/ReadVariableOp"
  input: "transform/b2_2/Read/ReadVariableOp"
  input: "transform/b2_2/Adam/Read_1/ReadVariableOp"
  input: "transform/b2_2/Adam_1/Read_1/ReadVariableOp"
  input: "transform/b2_3/Read/ReadVariableOp"
  input: "transform/b2_3/Adam/Read_1/ReadVariableOp"
  input: "transform/b2_3/Adam_1/Read_1/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 111
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "chain/linear_symplectic_two_by_two/s1"
        string_val: "chain/linear_symplectic_two_by_two/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two/s2"
        string_val: "chain/linear_symplectic_two_by_two/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two/s3"
        string_val: "chain/linear_symplectic_two_by_two/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two/s3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_1/s1"
        string_val: "chain/linear_symplectic_two_by_two_1/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two_1/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_1/s2"
        string_val: "chain/linear_symplectic_two_by_two_1/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two_1/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_1/s3"
        string_val: "chain/linear_symplectic_two_by_two_1/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two_1/s3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_2/s1"
        string_val: "chain/linear_symplectic_two_by_two_2/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two_2/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_2/s2"
        string_val: "chain/linear_symplectic_two_by_two_2/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two_2/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_2/s3"
        string_val: "chain/linear_symplectic_two_by_two_2/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two_2/s3/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_3/s1"
        string_val: "chain/linear_symplectic_two_by_two_3/s1/Adam"
        string_val: "chain/linear_symplectic_two_by_two_3/s1/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_3/s2"
        string_val: "chain/linear_symplectic_two_by_two_3/s2/Adam"
        string_val: "chain/linear_symplectic_two_by_two_3/s2/Adam_1"
        string_val: "chain/linear_symplectic_two_by_two_3/s3"
        string_val: "chain/linear_symplectic_two_by_two_3/s3/Adam"
        string_val: "chain/linear_symplectic_two_by_two_3/s3/Adam_1"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/W1"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/b3"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam"
        string_val: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1"
        string_val: "chain/squeeze_and_shift/scale"
        string_val: "chain/squeeze_and_shift/scale/Adam"
        string_val: "chain/squeeze_and_shift/scale/Adam_1"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam"
        string_val: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1"
        string_val: "chain/squeeze_and_shift_1/scale"
        string_val: "chain/squeeze_and_shift_1/scale/Adam"
        string_val: "chain/squeeze_and_shift_1/scale/Adam_1"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam"
        string_val: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1"
        string_val: "chain/squeeze_and_shift_2/scale"
        string_val: "chain/squeeze_and_shift_2/scale/Adam"
        string_val: "chain/squeeze_and_shift_2/scale/Adam_1"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam"
        string_val: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1"
        string_val: "chain/squeeze_and_shift_3/scale"
        string_val: "chain/squeeze_and_shift_3/scale/Adam"
        string_val: "chain/squeeze_and_shift_3/scale/Adam_1"
        string_val: "global_step"
        string_val: "transform/W2"
        string_val: "transform/W2/Adam"
        string_val: "transform/W2/Adam_1"
        string_val: "transform/W2_1"
        string_val: "transform/W2_1/Adam"
        string_val: "transform/W2_1/Adam_1"
        string_val: "transform/W2_2"
        string_val: "transform/W2_2/Adam"
        string_val: "transform/W2_2/Adam_1"
        string_val: "transform/W2_3"
        string_val: "transform/W2_3/Adam"
        string_val: "transform/W2_3/Adam_1"
        string_val: "transform/b1"
        string_val: "transform/b1/Adam"
        string_val: "transform/b1/Adam_1"
        string_val: "transform/b1_1"
        string_val: "transform/b1_1/Adam"
        string_val: "transform/b1_1/Adam_1"
        string_val: "transform/b1_2"
        string_val: "transform/b1_2/Adam"
        string_val: "transform/b1_2/Adam_1"
        string_val: "transform/b1_3"
        string_val: "transform/b1_3/Adam"
        string_val: "transform/b1_3/Adam_1"
        string_val: "transform/b2"
        string_val: "transform/b2/Adam"
        string_val: "transform/b2/Adam_1"
        string_val: "transform/b2_1"
        string_val: "transform/b2_1/Adam"
        string_val: "transform/b2_1/Adam_1"
        string_val: "transform/b2_2"
        string_val: "transform/b2_2/Adam"
        string_val: "transform/b2_2/Adam_1"
        string_val: "transform/b2_3"
        string_val: "transform/b2_3/Adam"
        string_val: "transform/b2_3/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 111
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s1/Adam"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s1/Adam_1"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s2"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s2/Adam"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s2/Adam_1"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s3"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s3/Adam"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two/s3/Adam_1"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s1/Adam_1"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s2"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s2/Adam_1"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s3"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_1/s3/Adam_1"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_1/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s1"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s1/Adam_1"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s2"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s2/Adam_1"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s3"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_2/s3/Adam_1"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_2/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s1"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s1/Adam_1"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s2"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s2/Adam_1"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s3"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "chain/linear_symplectic_two_by_two_3/s3/Adam_1"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@chain/linear_symplectic_two_by_two_3/s3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/W1/Adam_1"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/irrotational_mlp/b3/Adam_1"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/scale"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/scale/Adam"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift/scale/Adam_1"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/W1/Adam_1"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/irrotational_mlp_1/b3/Adam_1"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/scale"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/scale/Adam"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_1/scale/Adam_1"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/W1/Adam_1"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/irrotational_mlp_2/b3/Adam_1"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/scale"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/scale/Adam"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_2/scale/Adam_1"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/W1/Adam_1"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/irrotational_mlp_3/b3/Adam_1"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/scale"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/scale/Adam"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "chain/squeeze_and_shift_3/scale/Adam_1"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "transform/W2"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "transform/W2/Adam"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "transform/W2/Adam_1"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "transform/W2_1"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "transform/W2_1/Adam"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "transform/W2_1/Adam_1"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "transform/W2_2"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "transform/W2_2/Adam"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "transform/W2_2/Adam_1"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "transform/W2_3"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "transform/W2_3/Adam"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "transform/W2_3/Adam_1"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "transform/b1"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "transform/b1/Adam"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "transform/b1/Adam_1"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "transform/b1_1"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "transform/b1_1/Adam"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "transform/b1_1/Adam_1"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "transform/b1_2"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "transform/b1_2/Adam"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "transform/b1_2/Adam_1"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "transform/b1_3"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "transform/b1_3/Adam"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "transform/b1_3/Adam_1"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "transform/b2"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "transform/b2/Adam"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "transform/b2/Adam_1"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "transform/b2_1"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "transform/b2_1/Adam"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "transform/b2_1/Adam_1"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "transform/b2_2"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "transform/b2_2/Adam"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "transform/b2_2/Adam_1"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "transform/b2_3"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "transform/b2_3/Adam"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "transform/b2_3/Adam_1"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 27
}
